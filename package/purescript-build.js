// Generated by purs bundle 0.13.6
var PS = {};
(function(exports) {
  "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l*k);
      var n = 0;
      for (var i = 0; i < l; i++) {
        var f = fs[i];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };                                                                                             
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var $foreign = $PS["Control.Apply"];
  var Data_Functor = $PS["Data.Functor"];                
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  }; 
  var applyArray = new Apply(function () {
      return Data_Functor.functorArray;
  }, $foreign.arrayApply);
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applyArray"] = applyArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  }; 
  var applicativeArray = new Applicative(function () {
      return Control_Apply.applyArray;
  }, function (x) {
      return [ x ];
  });
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["applicativeArray"] = applicativeArray;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var $foreign = $PS["Control.Bind"];
  var Control_Apply = $PS["Control.Apply"];                
  var Discard = function (discard) {
      this.discard = discard;
  };
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var discard = function (dict) {
      return dict.discard;
  }; 
  var bindArray = new Bind(function () {
      return Control_Apply.applyArray;
  }, $foreign.arrayBind);
  var bind = function (dict) {
      return dict.bind;
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["discard"] = discard;
  exports["bindArray"] = bindArray;
  exports["discardUnit"] = discardUnit;
})(PS);
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqBooleanImpl = refEq;
  exports.eqIntImpl = refEq;   
  exports.eqCharImpl = refEq;
  exports.eqStringImpl = refEq;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqString = new Eq($foreign.eqStringImpl);
  var eqInt = new Eq($foreign.eqIntImpl);
  var eqChar = new Eq($foreign.eqCharImpl);
  var eqBoolean = new Eq($foreign.eqBooleanImpl);
  var eq = function (dict) {
      return dict.eq;
  };
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqInt"] = eqInt;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];
  var Data_Eq = $PS["Data.Eq"];                            
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (v) {
      return v.value1;
  };                                                                                                    
  var fst = function (v) {
      return v.value0;
  }; 
  var eqTuple = function (dictEq) {
      return function (dictEq1) {
          return new Data_Eq.Eq(function (x) {
              return function (y) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
              };
          });
      };
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["eqTuple"] = eqTuple;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.State.Class"] = $PS["Control.Monad.State.Class"] || {};
  var exports = $PS["Control.Monad.State.Class"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];                
  var MonadState = function (Monad0, state) {
      this.Monad0 = Monad0;
      this.state = state;
  };
  var state = function (dict) {
      return dict.state;
  };
  var put = function (dictMonadState) {
      return function (s) {
          return state(dictMonadState)(function (v) {
              return new Data_Tuple.Tuple(Data_Unit.unit, s);
          });
      };
  };
  var get = function (dictMonadState) {
      return state(dictMonadState)(function (s) {
          return new Data_Tuple.Tuple(s, s);
      });
  };
  exports["MonadState"] = MonadState;
  exports["get"] = get;
  exports["put"] = put;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.State.Trans"] = $PS["Control.Monad.State.Trans"] || {};
  var exports = $PS["Control.Monad.State.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];                    
  var StateT = function (x) {
      return x;
  }; 
  var functorStateT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return function (s) {
                  return Data_Functor.map(dictFunctor)(function (v1) {
                      return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                  })(v(s));
              };
          };
      });
  };
  var monadStateT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeStateT(dictMonad);
      }, function () {
          return bindStateT(dictMonad);
      });
  };
  var bindStateT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyStateT(dictMonad);
      }, function (v) {
          return function (f) {
              return function (s) {
                  return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
                      var v3 = f(v1.value0);
                      return v3(v1.value1);
                  });
              };
          };
      });
  };
  var applyStateT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorStateT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadStateT(dictMonad)));
  };
  var applicativeStateT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyStateT(dictMonad);
      }, function (a) {
          return function (s) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
          };
      });
  };
  var monadStateStateT = function (dictMonad) {
      return new Control_Monad_State_Class.MonadState(function () {
          return monadStateT(dictMonad);
      }, function (f) {
          return StateT((function () {
              var $112 = Control_Applicative.pure(dictMonad.Applicative0());
              return function ($113) {
                  return $112(f($113));
              };
          })());
      });
  };
  exports["applicativeStateT"] = applicativeStateT;
  exports["bindStateT"] = bindStateT;
  exports["monadStateStateT"] = monadStateStateT;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];          
  var Identity = function (x) {
      return x;
  };
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (m) {
          return f(m);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["monadIdentity"] = monadIdentity;
})(PS);
(function(exports) {
  "use strict";

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];
  var $foreign = $PS["Data.String.Common"];
  exports["joinWith"] = $foreign.joinWith;
})(PS);
(function(exports) {
  "use strict";                                                                                      

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.snoc = function (l) {
    return function (e) {
      var l1 = l.slice();
      l1.push(e);
      return l1;
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  //------------------------------------------------------------------------------
  // Transformations -------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.reverse = function (l) {
    return l.slice().reverse();
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  exports.take = function (n) {
    return function (l) {
      return n < 1 ? [] : l.slice(0, n);
    };
  };

  exports.drop = function (n) {
    return function (l) {
      return n < 1 ? l : l.slice(n);
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };

  exports.cons = function (head) {
    return function (tail) {
      return [head].concat(tail);
    };
  };

  exports.join = function (separator) {
    return function (xs) {
      return xs.join(separator);
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];      
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeGet"] = $foreign.unsafeGet;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Type.Data.RowList"] = $PS["Type.Data.RowList"] || {};
  var exports = $PS["Type.Data.RowList"];
  var RLProxy = (function () {
      function RLProxy() {

      };
      RLProxy.value = new RLProxy();
      return RLProxy;
  })();
  exports["RLProxy"] = RLProxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];                
  var ShowRecordFields = function (showRecordFields) {
      this.showRecordFields = showRecordFields;
  };
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showRecordFieldsNil = new ShowRecordFields(function (v) {
      return function (v1) {
          return [  ];
      };
  });
  var showRecordFields = function (dict) {
      return dict.showRecordFields;
  };
  var showRecord = function (dictRowToList) {
      return function (dictShowRecordFields) {
          return new Show(function (record) {
              var v = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);
              if (v.length === 0) {
                  return "{}";
              };
              return $foreign.join(" ")([ "{", $foreign.join(", ")(v), "}" ]);
          });
      };
  };                                                 
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return new Show($foreign.showArrayImpl(show(dictShow)));
  };
  var showRecordFieldsCons = function (dictIsSymbol) {
      return function (dictShowRecordFields) {
          return function (dictShow) {
              return new ShowRecordFields(function (v) {
                  return function (record) {
                      var tail = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);
                      var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                      var focus = Record_Unsafe.unsafeGet(key)(record);
                      return $foreign.cons($foreign.join(": ")([ key, show(dictShow)(focus) ]))(tail);
                  };
              });
          };
      };
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showString"] = showString;
  exports["showArray"] = showArray;
  exports["showRecord"] = showRecord;
  exports["showRecordFieldsNil"] = showRecordFieldsNil;
  exports["showRecordFieldsCons"] = showRecordFieldsCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Show = $PS["Data.Show"];                
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var showMaybe = function (dictShow) {
      return new Data_Show.Show(function (v) {
          if (v instanceof Just) {
              return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
          };
          if (v instanceof Nothing) {
              return "Nothing";
          };
          throw new Error("Failed pattern match at Data.Maybe (line 205, column 1 - line 207, column 28): " + [ v.constructor.name ]);
      });
  };
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromJust = function (dictPartial) {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [ v.constructor.name ]);
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["eqMaybe"] = eqMaybe;
  exports["showMaybe"] = showMaybe;
})(PS);
(function(exports) {
  "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupArray"] = semigroupArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };                 
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var find = function (dictFoldable) {
      return function (p) {
          var go = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Nothing && p(v1)) {
                      return new Data_Maybe.Just(v1);
                  };
                  return v;
              };
          };
          return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
      };
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["intercalate"] = intercalate;
  exports["find"] = find;
  exports["foldableArray"] = foldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var singleton = function (a) {
      return [ a ];
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };                                                                                     
  var init = function (xs) {
      if ($$null(xs)) {
          return Data_Maybe.Nothing.value;
      };
      if (Data_Boolean.otherwise) {
          return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
      };
      throw new Error("Failed pattern match at Data.Array (line 323, column 1 - line 323, column 45): " + [ xs.constructor.name ]);
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var span = function (p) {
      return function (arr) {
          var go = function ($copy_i) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(i) {
                  var v = index(arr)(i);
                  if (v instanceof Data_Maybe.Just) {
                      var $60 = p(v.value0);
                      if ($60) {
                          $copy_i = i + 1 | 0;
                          return;
                      };
                      $tco_done = true;
                      return new Data_Maybe.Just(i);
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  throw new Error("Failed pattern match at Data.Array (line 834, column 5 - line 836, column 25): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_i);
              };
              return $tco_result;
          };
          var breakIndex = go(0);
          if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {
              return {
                  init: [  ],
                  rest: arr
              };
          };
          if (breakIndex instanceof Data_Maybe.Just) {
              return {
                  init: $foreign.slice(0)(breakIndex.value0)(arr),
                  rest: $foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)
              };
          };
          if (breakIndex instanceof Data_Maybe.Nothing) {
              return {
                  init: arr,
                  rest: [  ]
              };
          };
          throw new Error("Failed pattern match at Data.Array (line 821, column 3 - line 827, column 30): " + [ breakIndex.constructor.name ]);
      };
  };
  var takeWhile = function (p) {
      return function (xs) {
          return (span(p)(xs)).init;
      };
  };
  var head = function (xs) {
      return index(xs)(0);
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["null"] = $$null;
  exports["head"] = head;
  exports["index"] = index;
  exports["concatMap"] = concatMap;
  exports["takeWhile"] = takeWhile;
  exports["length"] = $foreign.length;
  exports["cons"] = $foreign.cons;
  exports["snoc"] = $foreign.snoc;
  exports["reverse"] = $foreign.reverse;
  exports["filter"] = $foreign.filter;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];                    
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var listMap = function (f) {
      var chunkedRevMap = function ($copy_chunksAcc) {
          return function ($copy_v) {
              var $tco_var_chunksAcc = $copy_chunksAcc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(chunksAcc, v) {
                  if (v instanceof Cons && (v.value1 instanceof Cons && v.value1.value1 instanceof Cons)) {
                      $tco_var_chunksAcc = new Cons(v, chunksAcc);
                      $copy_v = v.value1.value1.value1;
                      return;
                  };
                  var unrolledMap = function (v1) {
                      if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil)) {
                          return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
                      };
                      if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                          return new Cons(f(v1.value0), Nil.value);
                      };
                      return Nil.value;
                  };
                  var reverseUnrolledMap = function ($copy_v1) {
                      return function ($copy_acc) {
                          var $tco_var_v1 = $copy_v1;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v1, acc) {
                              if (v1 instanceof Cons && (v1.value0 instanceof Cons && (v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons))) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                                  return;
                              };
                              $tco_done = true;
                              return acc;
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
                  $tco_done = true;
                  return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
              };
              return $tco_result;
          };
      };
      return chunkedRevMap(Nil.value);
  };
  var functorList = new Data_Functor.Functor(listMap);                 
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              var $202 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
              return function ($203) {
                  return $202(f($203));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types (line 109, column 12 - line 111, column 30): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
          var $204 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
          return function ($205) {
              return $204(rev($205));
          };
      };
  });
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types (line 155, column 1 - line 157, column 48): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["semigroupList"] = semigroupList;
  exports["foldableList"] = foldableList;
  exports["applicativeList"] = applicativeList;
})(PS);
(function(exports) {
  "use strict";

  var unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };                                         
  exports.ordIntImpl = unsafeCompareImpl;   
  exports.ordStringImpl = unsafeCompareImpl;
  exports.ordCharImpl = unsafeCompareImpl;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];              
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  }; 
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordChar = new Ord(function () {
      return Data_Eq.eqChar;
  }, $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var compare = function (dict) {
      return dict.compare;
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["ordInt"] = ordInt;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
})(PS);
(function(exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Unfoldable1 = function (unfoldr1) {
      this.unfoldr1 = unfoldr1;
  }; 
  var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];  
  var Unfoldable = function (Unfoldable10, unfoldr) {
      this.Unfoldable10 = Unfoldable10;
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  }; 
  var unfoldableArray = new Unfoldable(function () {
      return Data_Unfoldable1.unfoldable1Array;
  }, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Map.Internal"] = $PS["Data.Map.Internal"] || {};
  var exports = $PS["Data.Map.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var singleton = function (k) {
      return function (v) {
          return new Two(Leaf.value, k, v, Leaf.value);
      };
  };
  var toUnfoldable = function (dictUnfoldable) {
      return function (m) {
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof Leaf) {
                          $copy_v = v.value1;
                          return;
                      };
                      if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
                      };
                      if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                      };
                      if (v.value0 instanceof Two) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                          return;
                      };
                      if (v.value0 instanceof Three) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 577, column 18 - line 586, column 71): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 576, column 3 - line 576, column 19): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
      };
  };
  var lookup = function (dictOrd) {
      return function (k) {
          var comp = Data_Ord.compare(dictOrd);
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Leaf) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Two) {
                      var v2 = comp(k)(v.value1);
                      if (v2 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      if (v2 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  if (v instanceof Three) {
                      var v3 = comp(k)(v.value1);
                      if (v3 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      var v4 = comp(k)(v.value4);
                      if (v4 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value5);
                      };
                      if (v3 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      if (v4 instanceof Data_Ordering.GT) {
                          $copy_v = v.value6;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 200, column 5 - line 200, column 22): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return go;
      };
  };
  var keys = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal (line 606, column 1 - line 606, column 38): " + [ v.constructor.name ]);
  };
  var functorMap = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Leaf) {
              return Leaf.value;
          };
          if (v1 instanceof Two) {
              return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
          };
          if (v1 instanceof Three) {
              return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
          };
          throw new Error("Failed pattern match at Data.Map.Internal (line 96, column 1 - line 99, column 110): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 418, column 3 - line 423, column 88): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 415, column 1 - line 415, column 80): " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map.Internal (line 454, column 5 - line 459, column 108): " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 451, column 3 - line 451, column 56): " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 434, column 3 - line 434, column 55): " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var empty = Leaf.value;
  var fromFoldable = function (dictOrd) {
      return function (dictFoldable) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (v) {
                  return insert(dictOrd)(v.value0)(v.value1)(m);
              };
          })(empty);
      };
  };
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["fromFoldable"] = fromFoldable;
  exports["toUnfoldable"] = toUnfoldable;
  exports["keys"] = keys;
  exports["functorMap"] = functorMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Map"] = $PS["Data.Map"] || {};
  var exports = $PS["Data.Map"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];                
  var keys = (function () {
      var $0 = Data_Functor["void"](Data_Map_Internal.functorMap);
      return function ($1) {
          return $0($1);
      };
  })();
  exports["keys"] = keys;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Set"] = $PS["Data.Set"] || {};
  var exports = $PS["Data.Set"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var toList = function (v) {
      return Data_Map_Internal.keys(v);
  };
  var foldableSet = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          var $65 = Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f);
          return function ($66) {
              return $65(toList($66));
          };
      };
  }, function (f) {
      return function (x) {
          var $67 = Data_Foldable.foldl(Data_List_Types.foldableList)(f)(x);
          return function ($68) {
              return $67(toList($68));
          };
      };
  }, function (f) {
      return function (x) {
          var $69 = Data_Foldable.foldr(Data_List_Types.foldableList)(f)(x);
          return function ($70) {
              return $69(toList($70));
          };
      };
  });
  exports["foldableSet"] = foldableSet;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["JavaScript"] = $PS["JavaScript"] || {};
  var exports = $PS["JavaScript"];
  var Data_Array = $PS["Data.Array"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_String_Common = $PS["Data.String.Common"];                
  var thenExpr = function (body) {
      return Data_String_Common.joinWith("\x0a")((function () {
          var body_ = Data_String_Common.joinWith("\x0a")(body);
          return [ "{", body_, "}" ];
      })());
  };
  var tab = "    ";
  var $$while = function (cond) {
      return function (body) {
          var body_ = tab + Data_String_Common.joinWith("\x0a" + tab)(body);
          return Data_String_Common.joinWith("\x0a")([ "while(" + (cond + "){"), body_, "}" ]);
      };
  };
  var $$return = function (expr) {
      return "return " + (expr + ";");
  };
  var obj = function (key_values) {
      var group = function (arr_) {
          return function (count_) {
              var doGroup = function ($copy_arr) {
                  return function ($copy_count) {
                      return function ($copy_acc) {
                          var $tco_var_arr = $copy_arr;
                          var $tco_var_count = $copy_count;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(arr, count, acc) {
                              var $0 = Data_Array.length(arr) < count;
                              if ($0) {
                                  $tco_done = true;
                                  return acc;
                              };
                              var newGroup = Data_Array.take(count)(arr);
                              var dropped = Data_Array.drop(count)(arr);
                              $tco_var_arr = dropped;
                              $tco_var_count = count;
                              $copy_acc = Data_Array.cons(newGroup)(acc);
                              return;
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_arr, $tco_var_count, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
              };
              return doGroup(arr_)(count_)([  ]);
          };
      };
      var _key_values = Data_String_Common.joinWith(",\x0a")(Data_Function.flip(Data_Functor.map(Data_Functor.functorArray))(group(key_values)(2))(function (kv) {
          return Data_String_Common.joinWith(": ")(kv);
      }));
      return Data_String_Common.joinWith("\x0a")([ "{", _key_values, "}" ]);
  };
  var ifExpr = function (expr) {
      return "if(" + (expr + ")");
  };
  var $$function = function (name) {
      return function (args) {
          return function (body) {
              var body_ = "\x09" + Data_String_Common.joinWith("\x0a\x09")(body);
              var args_ = Data_String_Common.joinWith(", ")(args);
              return Data_String_Common.joinWith("\x0a")([ "function " + (name + ("(" + (args_ + ") {"))), body_, "}" ]);
          };
      };
  };
  var elseExpr = function (body) {
      return Data_String_Common.joinWith("\x0a")((function () {
          var body_ = Data_String_Common.joinWith("\x0a")(body);
          return [ "else {", body_, "}" ];
      })());
  };
  var declareLet = function (name) {
      return function (expr) {
          return "let " + (name + (" = " + (expr + ";")));
      };
  };
  var declareConst = function (name) {
      return function (expr) {
          return "const " + (name + (" = " + (expr + ";")));
      };
  };
  var comment = function (body) {
      var body_ = Data_String_Common.joinWith("\x0a * ")(body);
      return Data_String_Common.joinWith("\x0a * ")([ "/*", body_, "*/" ]);
  };
  var call = function (fn) {
      return function (args) {
          return fn + ("(" + (Data_String_Common.joinWith(", ")(args) + ")"));
      };
  };
  var assign = function ($$var) {
      return function (val) {
          return $$var + (" = " + (val + ";"));
      };
  };
  exports["declareConst"] = declareConst;
  exports["declareLet"] = declareLet;
  exports["ifExpr"] = ifExpr;
  exports["thenExpr"] = thenExpr;
  exports["elseExpr"] = elseExpr;
  exports["function"] = $$function;
  exports["return"] = $$return;
  exports["comment"] = comment;
  exports["while"] = $$while;
  exports["assign"] = assign;
  exports["call"] = call;
  exports["obj"] = obj;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Definitions"] = $PS["Definitions"] || {};
  var exports = $PS["Definitions"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Map = $PS["Data.Map"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Set = $PS["Data.Set"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var JavaScript = $PS["JavaScript"];                
  var updateProgram = function (next) {
      return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(function (ctx) {
          return Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))((function () {
              var $4 = {};
              for (var $5 in ctx) {
                  if ({}.hasOwnProperty.call(ctx, $5)) {
                      $4[$5] = ctx[$5];
                  };
              };
              $4.program = ctx.program + ("\x0a" + next);
              return $4;
          })());
      });
  };
  var fn = {
      newLine: "newLine",
      newColumn: "newColumn",
      inputRemains: "inputRemains",
      discardUntil: "discardUntil",
      doMaxMunch: "doMaxMunch",
      isError: "isError",
      publish: "publish",
      makeMatcher: "makeMatcher",
      makeError: "makeError",
      lookupError: "lookupError"
  };
  var helpers = Data_String_Common.joinWith("\x0a")([ JavaScript.comment([ "This function calculates the new line position by looking at the lexeme", "and counting the number of newlines in it" ]), JavaScript["function"](fn.newLine)([ "munch", "oldLine" ])([ JavaScript.declareLet("count")("0"), "for(let i = 0; i < munch.lexeme.length; i++){", JavaScript.ifExpr("munch.lexeme[i] === '\\n'"), JavaScript.thenExpr([ "count++" ]), JavaScript["return"]("oldLine + count"), "}" ]), JavaScript.comment([ "This function calculates the new column position by looking at the lexeme", "and finding the number of characters AFTER the last newline" ]), JavaScript["function"](fn.newColumn)([ "munch", "oldCol" ])([ JavaScript.declareLet("index")("munch.lexeme.length"), JavaScript.declareLet("foundNewline")("false"), JavaScript["while"]("index > 0 && !foundNewline")([ "index--", JavaScript.ifExpr("munch.lexeme[index] === '\\n'"), JavaScript.thenExpr([ JavaScript.assign("foundNewline")("true"), "break;" ]) ]), JavaScript.ifExpr("foundNewline"), JavaScript.thenExpr([ JavaScript["return"]("munch.lexeme.length - index - 1") ]), JavaScript.elseExpr([ JavaScript["return"]("oldCol + munch.lexeme.length") ]) ]), JavaScript["function"](fn.inputRemains)([ "str" ])([ JavaScript["return"]("str.length > 0") ]), JavaScript.comment([ "This function discards characters from the input string until", "the regex matches the syncing regex. Lexing should restart from", "there" ]), JavaScript["function"](fn.discardUntil)([ "str", "syncMatcher" ])([ JavaScript.declareLet("search")("str"), JavaScript.declareConst("discarded")("[]"), JavaScript["while"]("!" + (JavaScript.call("syncMatcher")([ "search" ]) + " && search.length > 0"))([ "discarded." + JavaScript.call("push")([ "search[0]" ]), "search = search.slice(1);" ]), JavaScript["return"](JavaScript.obj([ "discarded", "discarded.join('')", "synced", "search" ])) ]), "\x0a", JavaScript.comment([ "This function runs through all the declared tokens and tries all of them to", "find the one with maximum munch. If two or more have the same length, the one", "that was declared latest in the lexer-gen file takes priority. Once the maximum", "munch is identified, it returns an object containing the token type, the lexeme,", "the column number, and the line number" ]), JavaScript["function"](fn.doMaxMunch)([ "str", "line", "column" ])([ JavaScript.declareLet("munch")("Object.values(matchers)." + JavaScript.call("reduce")([ JavaScript["function"]("match")([ "acc", "matcher" ])([ JavaScript.declareConst("result")(JavaScript.call("matcher")([ "str" ])), JavaScript.ifExpr("result !== null"), JavaScript.thenExpr([ JavaScript.assign("acc.type")("result.type"), JavaScript.assign("acc.lexeme")("result.lexeme") ]), JavaScript["return"]("acc") ]), JavaScript.obj([ "line", "line", "column", "column", "type", "undefined", "lexeme", " '' " ]) ])), JavaScript.ifExpr("munch.type === undefined"), JavaScript.thenExpr([ JavaScript.assign("munch")("Object.values(errors)." + JavaScript.call("reduce")([ JavaScript["function"]("match")([ "acc", "error" ])([ JavaScript.declareConst("result")(JavaScript.call("error")([ "str" ])), JavaScript.ifExpr("result !== null"), JavaScript.thenExpr([ JavaScript.assign("acc.type")("result.type"), JavaScript.assign("acc.lexeme")("result.lexeme") ]), JavaScript["return"]("acc") ]), JavaScript.obj([ "line", "line", "column", "column", "type", "undefined", "lexeme", " '' " ]) ])), JavaScript.ifExpr("munch.type === undefined"), JavaScript.thenExpr([ "throw new Error('Lexing got stuck! No matchers or errors succeeded! Unexpected'); " ]) ]), "\x0a", JavaScript["return"]("munch") ]), JavaScript.comment([ "This function determines whether a given munch is an error munch or not" ]), JavaScript["function"](fn.isError)([ "munch" ])([ JavaScript["return"](fn.lookupError + "(munch.type.toString()) !== null") ]), JavaScript["function"](fn.publish)([ "munch", "tokens", "errors" ])([ JavaScript.ifExpr(JavaScript.call(fn.isError)([ "munch" ])), JavaScript.thenExpr([ JavaScript.call("publishError")([ "munch", "errors" ]) ]), JavaScript.elseExpr([ JavaScript.call("publishToken")([ "munch", "tokens" ]) ]), JavaScript["function"]("publishError")([ "munch", "errors" ])([ "errors." + JavaScript.call("push")([ "`line ${munch.line}, column ${munch.column}: ${" + (fn.lookupError + "(munch.type)}`") ]) ]), JavaScript["function"]("publishToken")([ "munch", "tokens" ])([ "tokens." + JavaScript.call("push")([ "munch" ]) ]) ]) ]);
  var defineMakeMatcher = (function () {
      var makeMatcher = JavaScript["function"](fn.makeMatcher)([ "tokenName", "regex" ])([ JavaScript["return"](JavaScript["function"]("matcher")([ "input" ])([ JavaScript.declareConst("result")("input." + JavaScript.call("match")([ "regex" ])), JavaScript.ifExpr("result && result.length > 0"), JavaScript.thenExpr([ JavaScript["return"](JavaScript.obj([ "type", "tokenName", "lexeme", "result[0]" ])) ]), JavaScript.elseExpr([ JavaScript["return"]("null") ]) ])) ]);
      return updateProgram(makeMatcher);
  })();
  var defineMakeError = (function () {
      var makeError = JavaScript["function"](fn.makeError)([ "name", "regex", "sync" ])([ JavaScript.declareConst("initialMatcher")(JavaScript.call(fn.makeMatcher)([ "name", "regex" ])), JavaScript["return"](JavaScript["function"]("matcher")([ "input" ])([ JavaScript.declareConst("initialResult")(JavaScript.call("initialMatcher")([ "input" ])), JavaScript.declareConst("syncMatcher")("matchers[" + ("sync" + "]")), JavaScript.ifExpr("!syncMatcher || initialResult === null"), JavaScript.thenExpr([ JavaScript["return"]("initialResult") ]), JavaScript.elseExpr([ JavaScript.declareConst("afterMatchInput")("input.slice(initialResult.lexeme.length)"), JavaScript.declareConst("{discarded, synced}")(JavaScript.call("discardUntil")([ "afterMatchInput", "syncMatcher" ])), JavaScript.assign("initialResult.originalLexeme")("initialResult.lexeme"), JavaScript.assign("initialResult.lexeme")("initialResult.lexeme + discarded"), JavaScript["return"]("initialResult") ]) ])) ]);
      return updateProgram(makeError);
  })();
  var defineLookupError = Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(function (ctx) {
      var errorStore = Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(ctx.errors);
      var errorLookup = (function () {
          var kv = Data_Function.flip(Data_Array.concatMap)(errorStore)(function (tup) {
              var name = Data_Tuple.fst(tup);
              var message = Data_Tuple.fst(Data_Tuple.snd(tup));
              return [ name, "'" + (message + "'") ];
          });
          return JavaScript["function"](fn.lookupError)([ "type" ])([ JavaScript.declareConst("lookup")(JavaScript.obj(kv)), JavaScript.ifExpr("lookup[type] !== undefined"), JavaScript.thenExpr([ JavaScript["return"]("lookup[type]") ]), JavaScript.elseExpr([ JavaScript["return"]("null") ]) ]);
      })();
      return updateProgram(errorLookup);
  });
  var defineHelpers = updateProgram(helpers);
  var asToken = function (name) {
      return name;
  };
  var defineErrors = (function () {
      var errors = Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(function (ctx) {
          var errorStore = Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(ctx.errors);
          var errorMatchers = Data_Function.flip(Data_Functor.map(Data_Functor.functorArray))(errorStore)(function (tup) {
              var sync = (function () {
                  var v = Data_Tuple.snd(Data_Tuple.snd(tup));
                  if (v instanceof Data_Maybe.Nothing) {
                      return "undefined";
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  throw new Error("Failed pattern match at Definitions (line 278, column 36 - line 280, column 48): " + [ v.constructor.name ]);
              })();
              var name = Data_Tuple.fst(tup);
              var regex = (function () {
                  var v = Data_Map_Internal.lookup(Data_Ord.ordString)(name)(ctx.names);
                  if (v instanceof Data_Maybe.Nothing) {
                      return "undefined";
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  throw new Error("Failed pattern match at Definitions (line 274, column 37 - line 276, column 48): " + [ v.constructor.name ]);
              })();
              var message = Data_Tuple.fst(Data_Tuple.snd(tup));
              return name + (": " + JavaScript.call(fn.makeError)([ asToken(name), regex, sync ]));
          });
          var kv = Data_String_Common.joinWith(",\x0a")(errorMatchers);
          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(JavaScript.declareConst("errors")("{\x0a" + (kv + "\x0a}")));
      });
      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(defineMakeError)(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(defineLookupError)(function () {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(errors)(function (definitions) {
                  return updateProgram(definitions);
              });
          });
      });
  })();
  var defineMatchers = (function () {
      var matchers = (function () {
          var nonErrorTokenStore = Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(function (ctx) {
              var allTokenStore = Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(ctx.names);
              var nonErrorStore = Data_Function.flip(Data_Array.filter)(allTokenStore)(function (v) {
                  return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Tuple.eqTuple(Data_Eq.eqString)(Data_Maybe.eqMaybe(Data_Eq.eqString))))(Data_Map_Internal.lookup(Data_Ord.ordString)(v.value0)(ctx.errors))(Data_Maybe.Nothing.value);
              });
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(nonErrorStore);
          });
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(nonErrorTokenStore)(function (nonErrorTokenStore_) {
              var matchers_ = Data_Function.flip(Data_Functor.map(Data_Functor.functorArray))(nonErrorTokenStore_)(function (tup) {
                  return Data_Tuple.fst(tup) + (": " + JavaScript.call(fn.makeMatcher)([ asToken(Data_Tuple.fst(tup)), Data_Tuple.snd(tup) ]));
              });
              var kv = Data_String_Common.joinWith(",\x0a")(matchers_);
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(JavaScript.declareConst("matchers")("{\x0a" + (kv + "\x0a}")));
          });
      })();
      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(defineMakeMatcher)(function () {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(matchers)(function (definitions) {
              return updateProgram(definitions);
          });
      });
  })();
  var exportTokenTypes = (function () {
      var doExport = function (store) {
          var keys = Data_Array.fromFoldable(Data_Set.foldableSet)(Data_Map.keys(store));
          return Data_Function.flip(Data_Functor.map(Data_Functor.functorArray))(keys)(function (key) {
              return "export " + JavaScript.declareConst(asToken(key))("\"" + (key + "\""));
          });
      };
      return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(function (ctx) {
          var exports = doExport(ctx.names);
          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_String_Common.joinWith("\x0a")(exports));
      });
  })();
  var defineTokens = Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(exportTokenTypes)(function (tokenDefinitions) {
      return updateProgram(tokenDefinitions);
  });
  exports["defineHelpers"] = defineHelpers;
  exports["defineTokens"] = defineTokens;
  exports["defineMatchers"] = defineMatchers;
  exports["defineErrors"] = defineErrors;
  exports["fn"] = fn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["BuildProgram"] = $PS["BuildProgram"] || {};
  var exports = $PS["BuildProgram"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Definitions = $PS["Definitions"];
  var JavaScript = $PS["JavaScript"];                
  var writeLexer = (function () {
      var prog = Data_String_Common.joinWith("\x0a")([ "export " + JavaScript["function"]("lex")([ "input" ])([ JavaScript.declareLet("str")("input"), JavaScript.declareConst("tokens")("[]"), JavaScript.declareConst("errors")("[]"), JavaScript.declareLet("line")("0"), JavaScript.declareLet("column")("0"), JavaScript["while"](JavaScript.call(Definitions.fn.inputRemains)([ "str" ]))([ JavaScript.declareLet("maxMunch")(JavaScript.call(Definitions.fn.doMaxMunch)([ "str", "line", "column" ])), JavaScript.assign("str")("str.slice(maxMunch.lexeme.length)"), JavaScript.call(Definitions.fn.publish)([ "maxMunch", "tokens", "errors" ]), JavaScript.assign("line")(JavaScript.call(Definitions.fn.newLine)([ "maxMunch", "line" ])), JavaScript.assign("column")(JavaScript.call(Definitions.fn.newColumn)([ "maxMunch", "column" ])) ]), JavaScript["return"](JavaScript.obj([ "tokens", "tokens", "errors", "errors" ])) ]), "export default lex;" ]);
      return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(function (ctx) {
          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(prog + ("\x0a\x0a" + ctx.program));
      });
  })();
  var buildProgram = Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Definitions.defineHelpers)(function () {
      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Definitions.defineTokens)(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Definitions.defineMatchers)(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Definitions.defineErrors)(function () {
                  return writeLexer;
              });
          });
      });
  });
  exports["buildProgram"] = buildProgram;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Monad.State"] = $PS["Control.Monad.State"] || {};
  var exports = $PS["Control.Monad.State"];
  var evalState = function (v) {
      return function (s) {
          var v1 = v(s);
          return v1.value0;
      };
  };
  exports["evalState"] = evalState;
})(PS);
(function(exports) {
  "use strict";

  exports.singleton = function (c) {
    return c;
  };

  exports.length = function (s) {
    return s.length;
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports._lastIndexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.lastIndexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {};
  var exports = $PS["Data.String.CodeUnits"];
  var $foreign = $PS["Data.String.CodeUnits"];
  var Data_Maybe = $PS["Data.Maybe"];                                                                 
  var lastIndexOf = $foreign["_lastIndexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var stripSuffix = function (v) {
      return function (str) {
          var v1 = lastIndexOf(v)(str);
          if (v1 instanceof Data_Maybe.Just && v1.value0 === ($foreign.length(str) - $foreign.length(v) | 0)) {
              return Data_Maybe.Just.create($foreign.take(v1.value0)(str));
          };
          return Data_Maybe.Nothing.value;
      };
  };                                                                                          
  var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var stripPrefix = function (v) {
      return function (str) {
          var v1 = indexOf(v)(str);
          if (v1 instanceof Data_Maybe.Just && v1.value0 === 0) {
              return Data_Maybe.Just.create($foreign.drop($foreign.length(v))(str));
          };
          return Data_Maybe.Nothing.value;
      };
  };
  var contains = function (pat) {
      var $16 = indexOf(pat);
      return function ($17) {
          return Data_Maybe.isJust($16($17));
      };
  };
  exports["stripPrefix"] = stripPrefix;
  exports["stripSuffix"] = stripSuffix;
  exports["contains"] = contains;
  exports["singleton"] = $foreign.singleton;
  exports["length"] = $foreign.length;
  exports["drop"] = $foreign.drop;
})(PS);
(function(exports) {
  "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                case 0: return pure([]);
                case 1: return map(array1)(f(array[bot]));
                case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }
              return go(0, array.length);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var $foreign = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];                                                      
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["sequence"] = sequence;
  exports["traversableArray"] = traversableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Generic.Rep"] = $PS["Data.Generic.Rep"] || {};
  var exports = $PS["Data.Generic.Rep"];             
  var Inl = (function () {
      function Inl(value0) {
          this.value0 = value0;
      };
      Inl.create = function (value0) {
          return new Inl(value0);
      };
      return Inl;
  })();
  var Inr = (function () {
      function Inr(value0) {
          this.value0 = value0;
      };
      Inr.create = function (value0) {
          return new Inr(value0);
      };
      return Inr;
  })();
  var Product = (function () {
      function Product(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Product.create = function (value0) {
          return function (value1) {
              return new Product(value0, value1);
          };
      };
      return Product;
  })();
  var NoArguments = (function () {
      function NoArguments() {

      };
      NoArguments.value = new NoArguments();
      return NoArguments;
  })();
  var Constructor = function (x) {
      return x;
  };
  var Generic = function (from, to) {
      this.from = from;
      this.to = to;
  };
  var to = function (dict) {
      return dict.to;
  }; 
  var from = function (dict) {
      return dict.from;
  };
  exports["Generic"] = Generic;
  exports["to"] = to;
  exports["from"] = from;
  exports["NoArguments"] = NoArguments;
  exports["Inl"] = Inl;
  exports["Inr"] = Inr;
  exports["Product"] = Product;
  exports["Constructor"] = Constructor;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Generic.Rep.Eq"] = $PS["Data.Generic.Rep.Eq"] || {};
  var exports = $PS["Data.Generic.Rep.Eq"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];                
  var GenericEq = function (genericEq$prime) {
      this["genericEq'"] = genericEq$prime;
  }; 
  var genericEqNoArguments = new GenericEq(function (v) {
      return function (v1) {
          return true;
      };
  });
  var genericEq$prime = function (dict) {
      return dict["genericEq'"];
  };
  var genericEqConstructor = function (dictGenericEq) {
      return new GenericEq(function (v) {
          return function (v1) {
              return genericEq$prime(dictGenericEq)(v)(v1);
          };
      });
  };
  var genericEqSum = function (dictGenericEq) {
      return function (dictGenericEq1) {
          return new GenericEq(function (v) {
              return function (v1) {
                  if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inl) {
                      return genericEq$prime(dictGenericEq)(v.value0)(v1.value0);
                  };
                  if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inr) {
                      return genericEq$prime(dictGenericEq1)(v.value0)(v1.value0);
                  };
                  return false;
              };
          });
      };
  };
  var genericEq = function (dictGeneric) {
      return function (dictGenericEq) {
          return function (x) {
              return function (y) {
                  return genericEq$prime(dictGenericEq)(Data_Generic_Rep.from(dictGeneric)(x))(Data_Generic_Rep.from(dictGeneric)(y));
              };
          };
      };
  };
  exports["genericEq"] = genericEq;
  exports["genericEqNoArguments"] = genericEqNoArguments;
  exports["genericEqSum"] = genericEqSum;
  exports["genericEqConstructor"] = genericEqConstructor;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Types"] = $PS["Types"] || {};
  var exports = $PS["Types"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Eq = $PS["Data.Generic.Rep.Eq"];
  var N = (function () {
      function N() {

      };
      N.value = new N();
      return N;
  })();
  var R = (function () {
      function R() {

      };
      R.value = new R();
      return R;
  })();
  var EM = (function () {
      function EM() {

      };
      EM.value = new EM();
      return EM;
  })();
  var Program = (function () {
      function Program(value0) {
          this.value0 = value0;
      };
      Program.create = function (value0) {
          return new Program(value0);
      };
      return Program;
  })();
  var NormalSpecs = (function () {
      function NormalSpecs(value0) {
          this.value0 = value0;
      };
      NormalSpecs.create = function (value0) {
          return new NormalSpecs(value0);
      };
      return NormalSpecs;
  })();
  var ErrorSpecs = (function () {
      function ErrorSpecs(value0) {
          this.value0 = value0;
      };
      ErrorSpecs.create = function (value0) {
          return new ErrorSpecs(value0);
      };
      return ErrorSpecs;
  })();
  var DefaultSpecs = (function () {
      function DefaultSpecs(value0) {
          this.value0 = value0;
      };
      DefaultSpecs.create = function (value0) {
          return new DefaultSpecs(value0);
      };
      return DefaultSpecs;
  })();
  var NormalSpec = (function () {
      function NormalSpec(value0) {
          this.value0 = value0;
      };
      NormalSpec.create = function (value0) {
          return new NormalSpec(value0);
      };
      return NormalSpec;
  })();
  var ErrorSpec = (function () {
      function ErrorSpec(value0) {
          this.value0 = value0;
      };
      ErrorSpec.create = function (value0) {
          return new ErrorSpec(value0);
      };
      return ErrorSpec;
  })();
  var DefaultError = (function () {
      function DefaultError(value0) {
          this.value0 = value0;
      };
      DefaultError.create = function (value0) {
          return new DefaultError(value0);
      };
      return DefaultError;
  })();
  var Name = (function () {
      function Name(value0) {
          this.value0 = value0;
      };
      Name.create = function (value0) {
          return new Name(value0);
      };
      return Name;
  })();
  var Regex = (function () {
      function Regex(value0) {
          this.value0 = value0;
      };
      Regex.create = function (value0) {
          return new Regex(value0);
      };
      return Regex;
  })();
  var ErrorMessage = (function () {
      function ErrorMessage(value0) {
          this.value0 = value0;
      };
      ErrorMessage.create = function (value0) {
          return new ErrorMessage(value0);
      };
      return ErrorMessage;
  })();
  var genericTokenType = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof N) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof R) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof EM) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
      };
      throw new Error("Failed pattern match at Types (line 55, column 1 - line 55, column 56): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return N.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return R.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
          return EM.value;
      };
      throw new Error("Failed pattern match at Types (line 55, column 1 - line 55, column 56): " + [ x.constructor.name ]);
  });
  var eqTokenType = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericTokenType)(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments)))));
  exports["Program"] = Program;
  exports["NormalSpecs"] = NormalSpecs;
  exports["ErrorSpecs"] = ErrorSpecs;
  exports["DefaultSpecs"] = DefaultSpecs;
  exports["NormalSpec"] = NormalSpec;
  exports["ErrorSpec"] = ErrorSpec;
  exports["DefaultError"] = DefaultError;
  exports["Name"] = Name;
  exports["Regex"] = Regex;
  exports["ErrorMessage"] = ErrorMessage;
  exports["N"] = N;
  exports["R"] = R;
  exports["EM"] = EM;
  exports["eqTokenType"] = eqTokenType;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["StoreInfo"] = $PS["StoreInfo"] || {};
  var exports = $PS["StoreInfo"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Data_Array = $PS["Data.Array"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Types = $PS["Types"];                
  var updateNames = function (token) {
      return function (regex) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(function (ctx) {
              return Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))((function () {
                  var $5 = {};
                  for (var $6 in ctx) {
                      if ({}.hasOwnProperty.call(ctx, $6)) {
                          $5[$6] = ctx[$6];
                      };
                  };
                  $5.names = Data_Map_Internal.insert(Data_Ord.ordString)(token)(regex)(ctx.names);
                  return $5;
              })());
          });
      };
  };
  var updateErrors = function (name) {
      return function (message) {
          return function (sync) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(function (ctx) {
                  return Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))((function () {
                      var $8 = {};
                      for (var $9 in ctx) {
                          if ({}.hasOwnProperty.call(ctx, $9)) {
                              $8[$9] = ctx[$9];
                          };
                      };
                      $8.errors = Data_Map_Internal.insert(Data_Ord.ordString)(name)(new Data_Tuple.Tuple(message, sync))(ctx.errors);
                      return $8;
                  })());
              });
          };
      };
  };
  var registerTokenRegex = function (name) {
      return function (regex) {
          return updateNames(name)(regex);
      };
  };
  var registerTokenError = function (name) {
      return function (message) {
          return function (sync) {
              return updateErrors(name)(message)((function () {
                  if (sync === "") {
                      return Data_Maybe.Nothing.value;
                  };
                  return new Data_Maybe.Just(sync);
              })());
          };
      };
  };
  var generateRegex = function (v) {
      if (v instanceof Data_Maybe.Just && v.value0 instanceof Types.Regex) {
          var removeParens = Control_Bind.bind(Data_Maybe.bindMaybe)(Data_String_CodeUnits.stripPrefix("(")(v.value0.value0.lexeme))(function (removeFront) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_String_CodeUnits.stripSuffix(")")(removeFront))(function (removeBack) {
                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(removeBack);
              });
          });
          var lexeme = (function () {
              if (removeParens instanceof Data_Maybe.Nothing) {
                  return v.value0.value0.lexeme;
              };
              if (removeParens instanceof Data_Maybe.Just) {
                  return removeParens.value0;
              };
              throw new Error("Failed pattern match at StoreInfo (line 80, column 18 - line 82, column 24): " + [ removeParens.constructor.name ]);
          })();
          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))("new RegExp(" + ("\"^" + (lexeme + ("\"" + ")"))));
      };
      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))("");
  };
  var generateName = function (v) {
      if (v instanceof Data_Maybe.Just && v.value0 instanceof Types.Name) {
          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(v.value0.value0.lexeme);
      };
      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))("");
  };
  var generateMessage = function (v) {
      if (v instanceof Data_Maybe.Just && v.value0 instanceof Types.ErrorMessage) {
          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(v.value0.value0.lexeme);
      };
      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))("");
  };
  var storeInfo = function (ast) {
      var eHead = Data_Function.flip(Data_Array.index);
      if (ast instanceof Types.Program) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_Functor.functorArray)(storeInfo)(ast.value0)))(function () {
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
          });
      };
      if (ast instanceof Types.NormalSpecs) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_Functor.functorArray)(storeInfo)(ast.value0)))(function () {
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
          });
      };
      if (ast instanceof Types.ErrorSpecs) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_Functor.functorArray)(storeInfo)(ast.value0)))(function () {
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
          });
      };
      if (ast instanceof Types.DefaultSpecs) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_Functor.functorArray)(storeInfo)(ast.value0)))(function () {
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
          });
      };
      if (ast instanceof Types.NormalSpec) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(generateName(Data_Array.head(ast.value0)))(function (name) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(generateRegex(eHead(1)(ast.value0)))(function (regex) {
                  return registerTokenRegex(name)(regex);
              });
          });
      };
      if (ast instanceof Types.ErrorSpec) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(generateName(Data_Array.head(ast.value0)))(function (name) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(generateMessage(eHead(1)(ast.value0)))(function (message) {
                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(generateName(eHead(2)(ast.value0)))(function (sync) {
                      return registerTokenError(name)(message)(sync);
                  });
              });
          });
      };
      if (ast instanceof Types.DefaultError) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(generateMessage(Data_Array.head(ast.value0)))(function (message) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(generateName(eHead(1)(ast.value0)))(function (sync) {
                  return registerTokenError("_default")(message)(sync);
              });
          });
      };
      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
  };
  exports["storeInfo"] = storeInfo;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["CodeGen"] = $PS["CodeGen"] || {};
  var exports = $PS["CodeGen"];
  var BuildProgram = $PS["BuildProgram"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State = $PS["Control.Monad.State"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Tuple = $PS["Data.Tuple"];
  var StoreInfo = $PS["StoreInfo"];
  var Types = $PS["Types"];
  var initialContext = {
      program: "",
      names: Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("_default", "new RegExp('.*')") ]),
      errors: Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("_default", new Data_Tuple.Tuple("No match for any token", Data_Maybe.Nothing.value)) ])
  };
  var doGenerate = function (v) {
      if (v instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))("");
      };
      if (v instanceof Data_Maybe.Just) {
          if (v.value0 instanceof Types.Program) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(StoreInfo.storeInfo(new Types.Program(v.value0.value0)))(function () {
                  return BuildProgram.buildProgram;
              });
          };
          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))("");
      };
      throw new Error("Failed pattern match at CodeGen (line 64, column 1 - line 64, column 47): " + [ v.constructor.name ]);
  };
  var generate = function (ast) {
      return Control_Monad_State.evalState(doGenerate(new Data_Maybe.Just(ast)))(initialContext);
  };
  exports["generate"] = generate;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Array.NonEmpty"] = $PS["Data.Array.NonEmpty"] || {};
  var exports = $PS["Data.Array.NonEmpty"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];         
  var unsafeFromArray = Unsafe_Coerce.unsafeCoerce;
  var toArray = Unsafe_Coerce.unsafeCoerce;
  var singleton = function ($49) {
      return unsafeFromArray(Data_Array.singleton($49));
  };
  var fromArray = function (xs) {
      if (Data_Array.length(xs) > 0) {
          return new Data_Maybe.Just(unsafeFromArray(xs));
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Array.NonEmpty (line 134, column 1 - line 134, column 58): " + [ xs.constructor.name ]);
  };   
  var appendArray = function (xs) {
      return function (ys) {
          return unsafeFromArray(Data_Semigroup.append(Data_Semigroup.semigroupArray)(toArray(xs))(ys));
      };
  };
  var adaptMaybe = function (f) {
      var $64 = Data_Maybe.fromJust();
      return function ($65) {
          return $64(f(toArray($65)));
      };
  };
  var head = adaptMaybe(Data_Array.head);    
  var adaptAny = function (f) {
      return function ($67) {
          return f(toArray($67));
      };
  };                                     
  var length = adaptAny(Data_Array.length);
  exports["fromArray"] = fromArray;
  exports["singleton"] = singleton;
  exports["appendArray"] = appendArray;
  exports["head"] = head;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];          
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof Left) {
              return new Left(m.value0);
          };
          if (m instanceof Right) {
              return new Right(f(m.value0));
          };
          throw new Error("Failed pattern match at Data.Either (line 38, column 1 - line 38, column 52): " + [ m.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };                                                                                          
  var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
  var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either (line 82, column 1 - line 84, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Control_Bind.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["isLeft"] = isLeft;
  exports["isRight"] = isRight;
  exports["functorEither"] = functorEither;
  exports["applicativeEither"] = applicativeEither;
  exports["bindEither"] = bindEither;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Array.NonEmpty.Internal"] = $PS["Data.Array.NonEmpty.Internal"] || {};
  var exports = $PS["Data.Array.NonEmpty.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];                                         
  var functorNonEmptyArray = Data_Functor.functorArray;                              
  var foldableNonEmptyArray = Data_Foldable.foldableArray;
  var applyNonEmptyArray = Control_Apply.applyArray;
  var applicativeNonEmptyArray = Control_Applicative.applicativeArray;
  exports["functorNonEmptyArray"] = functorNonEmptyArray;
  exports["foldableNonEmptyArray"] = foldableNonEmptyArray;
  exports["applyNonEmptyArray"] = applyNonEmptyArray;
  exports["applicativeNonEmptyArray"] = applicativeNonEmptyArray;
})(PS);
(function(exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  var heytingAlgebraFunction = function (dictHeytingAlgebra) {
      return new HeytingAlgebra(function (f) {
          return function (g) {
              return function (a) {
                  return conj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (g) {
              return function (a) {
                  return disj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (v) {
          return ff(dictHeytingAlgebra);
      }, function (f) {
          return function (g) {
              return function (a) {
                  return implies(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (a) {
              return not(dictHeytingAlgebra)(f(a));
          };
      }, function (v) {
          return tt(dictHeytingAlgebra);
      });
  };
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
  exports["heytingAlgebraFunction"] = heytingAlgebraFunction;
})(PS);
(function(exports) {
  "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator =
    typeof Symbol !== "undefined" &&
    Symbol != null &&
    typeof Symbol.iterator !== "undefined" &&
    typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt
      ? function (str) { return str.codePointAt(0); }
      : fallback;
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }
      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
  "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;

  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Bounded"] = $PS["Data.Bounded"] || {};
  var exports = $PS["Data.Bounded"];
  var $foreign = $PS["Data.Bounded"];
  var Data_Ord = $PS["Data.Ord"];                  
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                            
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var boundedChar = new Bounded(function () {
      return Data_Ord.ordChar;
  }, $foreign.bottomChar, $foreign.topChar);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS);
(function(exports) {
  "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Enum"] = $PS["Data.Enum"] || {};
  var exports = $PS["Data.Enum"];
  var $foreign = $PS["Data.Enum"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Enum = function (Ord0, pred, succ) {
      this.Ord0 = Ord0;
      this.pred = pred;
      this.succ = succ;
  };
  var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
      this.Bounded0 = Bounded0;
      this.Enum1 = Enum1;
      this.cardinality = cardinality;
      this.fromEnum = fromEnum;
      this.toEnum = toEnum;
  };
  var toEnum = function (dict) {
      return dict.toEnum;
  };
  var succ = function (dict) {
      return dict.succ;
  };              
  var fromEnum = function (dict) {
      return dict.fromEnum;
  };
  var toEnumWithDefaults = function (dictBoundedEnum) {
      return function (low) {
          return function (high) {
              return function (x) {
                  var v = toEnum(dictBoundedEnum)(x);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                      if ($54) {
                          return low;
                      };
                      return high;
                  };
                  throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var defaultSucc = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) + 1 | 0);
          };
      };
  };
  var defaultPred = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) - 1 | 0);
          };
      };
  };
  var charToEnum = function (v) {
      if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
          return new Data_Maybe.Just($foreign.fromCharCode(v));
      };
      return Data_Maybe.Nothing.value;
  };
  var enumChar = new Enum(function () {
      return Data_Ord.ordChar;
  }, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));
  var boundedEnumChar = new BoundedEnum(function () {
      return Data_Bounded.boundedChar;
  }, function () {
      return enumChar;
  }, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
  exports["Enum"] = Enum;
  exports["succ"] = succ;
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS);
(function(exports) {
  "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function(exports) {
  "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Semiring"] = $PS["Data.Semiring"] || {};
  var exports = $PS["Data.Semiring"];
  var $foreign = $PS["Data.Semiring"];
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };                                                                            
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  exports["semiringInt"] = semiringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Ring"] = $PS["Data.Ring"] || {};
  var exports = $PS["Data.Ring"];
  var $foreign = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Ring = function (Semiring0, sub) {
      this.Semiring0 = Semiring0;
      this.sub = sub;
  };                  
  var ringInt = new Ring(function () {
      return Data_Semiring.semiringInt;
  }, $foreign.intSub);
  exports["ringInt"] = ringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {};
  var exports = $PS["Data.CommutativeRing"];
  var Data_Ring = $PS["Data.Ring"];
  var CommutativeRing = function (Ring0) {
      this.Ring0 = Ring0;
  }; 
  var commutativeRingInt = new CommutativeRing(function () {
      return Data_Ring.ringInt;
  });
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {};
  var exports = $PS["Data.EuclideanRing"];
  var $foreign = $PS["Data.EuclideanRing"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];  
  var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
      this.CommutativeRing0 = CommutativeRing0;
      this.degree = degree;
      this.div = div;
      this.mod = mod;
  };
  var mod = function (dict) {
      return dict.mod;
  }; 
  var euclideanRingInt = new EuclideanRing(function () {
      return Data_CommutativeRing.commutativeRingInt;
  }, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
  var div = function (dict) {
      return dict.div;
  };
  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS);
(function(exports) {
  "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.Unsafe"] = $PS["Data.String.Unsafe"] || {};
  var exports = $PS["Data.String.Unsafe"];
  var $foreign = $PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.CodePoints"] = $PS["Data.String.CodePoints"] || {};
  var exports = $PS["Data.String.CodePoints"];
  var $foreign = $PS["Data.String.CodePoints"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                
  var CodePoint = function (x) {
      return x;
  };
  var unsurrogate = function (lead) {
      return function (trail) {
          return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
  }; 
  var isTrail = function (cu) {
      return 56320 <= cu && cu <= 57343;
  };
  var isLead = function (cu) {
      return 55296 <= cu && cu <= 56319;
  };
  var uncons = function (s) {
      var v = Data_String_CodeUnits.length(s);
      if (v === 0) {
          return Data_Maybe.Nothing.value;
      };
      if (v === 1) {
          return new Data_Maybe.Just({
              head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
              tail: ""
          });
      };
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
          return new Data_Maybe.Just({
              head: unsurrogate(cu0)(cu1),
              tail: Data_String_CodeUnits.drop(2)(s)
          });
      };
      return new Data_Maybe.Just({
          head: cu0,
          tail: Data_String_CodeUnits.drop(1)(s)
      });
  };
  var unconsButWithTuple = function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return new Data_Tuple.Tuple(v.head, v.tail);
      })(uncons(s));
  };
  var toCodePointArrayFallback = function (s) {
      return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function (s) {
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;
      if ($25) {
          var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
          var $26 = isTrail(cu1);
          if ($26) {
              return unsurrogate(cu0)(cu1);
          };
          return cu0;
      };
      return cu0;
  };
  var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);
  var length = function ($52) {
      return Data_Array.length(toCodePointArray($52));
  };
  var fromCharCode = (function () {
      var $53 = Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar));
      return function ($54) {
          return Data_String_CodeUnits.singleton($53($54));
      };
  })();
  var singletonFallback = function (v) {
      if (v <= 65535) {
          return fromCharCode(v);
      };
      var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode(lead) + fromCharCode(trail);
  };                                                                          
  var singleton = $foreign["_singleton"](singletonFallback);
  var takeFallback = function (n) {
      return function (v) {
          if (n < 1) {
              return "";
          };
          var v1 = uncons(v);
          if (v1 instanceof Data_Maybe.Just) {
              return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
          };
          return v;
      };
  };
  var take = $foreign["_take"](takeFallback);
  var eqCodePoint = new Data_Eq.Eq(function (x) {
      return function (y) {
          return x === y;
      };
  });
  var drop = function (n) {
      return function (s) {
          return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
      };
  };
  var codePointFromChar = (function () {
      var $55 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar);
      return function ($56) {
          return CodePoint($55($56));
      };
  })();
  exports["codePointFromChar"] = codePointFromChar;
  exports["toCodePointArray"] = toCodePointArray;
  exports["length"] = length;
  exports["drop"] = drop;
  exports["eqCodePoint"] = eqCodePoint;
})(PS);
(function(exports) {
  "use strict";

  exports["regex'"] = function (left) {
    return function (right) {
      return function (s1) {
        return function (s2) {
          try {
            return right(new RegExp(s1, s2));
          } catch (e) {
            return left(e.message);
          }
        };
      };
    };
  };

  exports._match = function (just) {
    return function (nothing) {
      return function (r) {
        return function (s) {
          var m = s.match(r);
          if (m == null || m.length === 0) {
            return nothing;
          } else {
            for (var i = 0; i < m.length; i++) {
              m[i] = m[i] == null ? nothing : just(m[i]);
            }
            return just(m);
          }
        };
      };
    };
  };
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.Regex"] = $PS["Data.String.Regex"] || {};
  var exports = $PS["Data.String.Regex"];
  var $foreign = $PS["Data.String.Regex"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];                                                
  var renderFlags = function (v) {
      return (function () {
          if (v.value0.global) {
              return "g";
          };
          return "";
      })() + ((function () {
          if (v.value0.ignoreCase) {
              return "i";
          };
          return "";
      })() + ((function () {
          if (v.value0.multiline) {
              return "m";
          };
          return "";
      })() + ((function () {
          if (v.value0.sticky) {
              return "y";
          };
          return "";
      })() + (function () {
          if (v.value0.unicode) {
              return "u";
          };
          return "";
      })())));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign["regex'"](Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
      };
  };
  var match = $foreign["_match"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["regex"] = regex;
  exports["match"] = match;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.String.Regex.Flags"] = $PS["Data.String.Regex.Flags"] || {};
  var exports = $PS["Data.String.Regex.Flags"];                      
  var RegexFlags = (function () {
      function RegexFlags(value0) {
          this.value0 = value0;
      };
      RegexFlags.create = function (value0) {
          return new RegexFlags(value0);
      };
      return RegexFlags;
  })();
  var noFlags = new RegexFlags({
      global: false,
      ignoreCase: false,
      multiline: false,
      sticky: false,
      unicode: false
  });
  exports["noFlags"] = noFlags;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Lexer"] = $PS["Lexer"] || {};
  var exports = $PS["Lexer"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Array_NonEmpty_Internal = $PS["Data.Array.NonEmpty.Internal"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Eq = $PS["Data.Generic.Rep.Eq"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Regex = $PS["Data.String.Regex"];
  var Data_String_Regex_Flags = $PS["Data.String.Regex.Flags"];
  var NormalHeader = (function () {
      function NormalHeader() {

      };
      NormalHeader.value = new NormalHeader();
      return NormalHeader;
  })();
  var ErrorHeader = (function () {
      function ErrorHeader() {

      };
      ErrorHeader.value = new ErrorHeader();
      return ErrorHeader;
  })();
  var DefaultHeader = (function () {
      function DefaultHeader() {

      };
      DefaultHeader.value = new DefaultHeader();
      return DefaultHeader;
  })();
  var Regex = (function () {
      function Regex() {

      };
      Regex.value = new Regex();
      return Regex;
  })();
  var ErrorMessage = (function () {
      function ErrorMessage() {

      };
      ErrorMessage.value = new ErrorMessage();
      return ErrorMessage;
  })();
  var Terminator = (function () {
      function Terminator() {

      };
      Terminator.value = new Terminator();
      return Terminator;
  })();
  var Name = (function () {
      function Name() {

      };
      Name.value = new Name();
      return Name;
  })();
  var FAIL = (function () {
      function FAIL() {

      };
      FAIL.value = new FAIL();
      return FAIL;
  })();
  var WhiteSpace = (function () {
      function WhiteSpace() {

      };
      WhiteSpace.value = new WhiteSpace();
      return WhiteSpace;
  })();
  var Default = (function () {
      function Default() {

      };
      Default.value = new Default();
      return Default;
  })();
  var possibleTokens = function (xs) {
      return function (c) {
          return function (l) {
              var resultToToken = function (r) {
                  return function (t) {
                      if (r instanceof Data_Maybe.Nothing) {
                          return Data_Maybe.Nothing.value;
                      };
                      if (r instanceof Data_Maybe.Just) {
                          var v = Data_Array_NonEmpty.head(r.value0);
                          if (v instanceof Data_Maybe.Nothing) {
                              return Data_Maybe.Nothing.value;
                          };
                          if (v instanceof Data_Maybe.Just) {
                              var token = {
                                  type: t,
                                  lexeme: v.value0,
                                  line: l,
                                  column: c
                              };
                              return new Data_Maybe.Just(token);
                          };
                          throw new Error("Failed pattern match at Lexer (line 181, column 28 - line 190, column 38): " + [ v.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Lexer (line 179, column 13 - line 190, column 38): " + [ r.constructor.name ]);
                  };
              };
              var matchToToken = function (v) {
                  if (v.result instanceof Data_Either.Left) {
                      return Data_Maybe.Nothing.value;
                  };
                  if (v.result instanceof Data_Either.Right) {
                      return resultToToken(v.result.value0)(v.type);
                  };
                  throw new Error("Failed pattern match at Lexer (line 174, column 47 - line 176, column 51): " + [ v.result.constructor.name ]);
              };
              var possible = (function () {
                  var acc = function (match) {
                      return function (arr) {
                          var v = matchToToken(match);
                          if (v instanceof Data_Maybe.Nothing) {
                              return arr;
                          };
                          if (v instanceof Data_Maybe.Just) {
                              return Data_Array.cons(v.value0)(arr);
                          };
                          throw new Error("Failed pattern match at Lexer (line 167, column 25 - line 169, column 59): " + [ v.constructor.name ]);
                      };
                  };
                  return Data_Foldable.foldr(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(acc)([  ])(xs);
              })();
              return possible;
          };
      };
  };
  var genericTokenType = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof NormalHeader) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof ErrorHeader) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof DefaultHeader) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
      };
      if (x instanceof Regex) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
      };
      if (x instanceof ErrorMessage) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));
      };
      if (x instanceof Terminator) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))));
      };
      if (x instanceof Name) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))));
      };
      if (x instanceof FAIL) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))));
      };
      if (x instanceof WhiteSpace) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))));
      };
      if (x instanceof Default) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)))))))));
      };
      throw new Error("Failed pattern match at Lexer (line 33, column 1 - line 33, column 56): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return NormalHeader.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return ErrorHeader.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
          return DefaultHeader.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
          return Regex.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
          return ErrorMessage.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
          return Terminator.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {
          return Name.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))) {
          return FAIL.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))) {
          return WhiteSpace.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))))))) {
          return Default.value;
      };
      throw new Error("Failed pattern match at Lexer (line 33, column 1 - line 33, column 56): " + [ x.constructor.name ]);
  });            
  var eqTokenType = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genericTokenType)(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))))))))))));
  var chooseBest = function (possible) {
      return Data_Array_NonEmpty.head(possible);
  };
  var allRegex = (function () {
      var terminator = Data_String_Regex.regex("^\\;")(Data_String_Regex_Flags.noFlags);
      var spaces = Data_String_Regex.regex("^\\s+")(Data_String_Regex_Flags.noFlags);
      var regexT = Data_String_Regex.regex("^\\(.+\\)")(Data_String_Regex_Flags.noFlags);
      var normalHeader = Data_String_Regex.regex("^%%_normal_%%")(Data_String_Regex_Flags.noFlags);
      var name = Data_String_Regex.regex("^[\\-\\_\\w]+")(Data_String_Regex_Flags.noFlags);
      var errorMessage = Data_String_Regex.regex("^\".*\"")(Data_String_Regex_Flags.noFlags);
      var errorHeader = Data_String_Regex.regex("^%%_error_%%")(Data_String_Regex_Flags.noFlags);
      var defaultHeader = Data_String_Regex.regex("^%%_default_%%")(Data_String_Regex_Flags.noFlags);
      var $$default = Data_String_Regex.regex("^\\$Default")(Data_String_Regex_Flags.noFlags);
      var terminatorTok = {
          type: Terminator.value,
          regex: terminator
      };
      var spaceTok = {
          type: WhiteSpace.value,
          regex: spaces
      };
      var regexTok = {
          type: Regex.value,
          regex: regexT
      };
      var normal = {
          type: NormalHeader.value,
          regex: normalHeader
      };
      var nameTok = {
          type: Name.value,
          regex: name
      };
      var errorM = {
          type: ErrorMessage.value,
          regex: errorMessage
      };
      var error = {
          type: ErrorHeader.value,
          regex: errorHeader
      };
      var defaultTok = {
          type: Default.value,
          regex: $$default
      };
      var defaultH = {
          type: DefaultHeader.value,
          regex: defaultHeader
      };
      return Data_Array_NonEmpty.appendArray(Data_Array_NonEmpty.singleton(normal))([ error, defaultH, errorM, regexTok, terminatorTok, nameTok, spaceTok, defaultTok ]);
  })();
  var doLex = function (str) {
      return function (c) {
          return function (l) {
              var newlineCount = function (s) {
                  var isNewline = function (x) {
                      return Data_Eq.eq(Data_String_CodePoints.eqCodePoint)(x)(Data_String_CodePoints.codePointFromChar("\x0a"));
                  };
                  var newlines = Data_Array.filter(isNewline)(Data_String_CodePoints.toCodePointArray(s));
                  return Data_Array.length(newlines);
              };
              var newColumnCount = function (s) {
                  return function (original) {
                      var isNotNewline = function (x) {
                          return Data_Eq.notEq(Data_String_CodePoints.eqCodePoint)(x)(Data_String_CodePoints.codePointFromChar("\x0a"));
                      };
                      var $73 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Data_String_CodeUnits.contains)("\x0a")(s);
                      if ($73) {
                          return original + Data_String_CodePoints.length(s) | 0;
                      };
                      var beforeLastNewline = Data_Array.takeWhile(isNotNewline)(Data_Array.reverse(Data_String_CodePoints.toCodePointArray(s)));
                      var $$new = Data_Array.length(beforeLastNewline);
                      return $$new;
                  };
              };
              var matchers = (function () {
                  var doMatch = function (pair) {
                      return function (s) {
                          var m = Data_Function.flip(Data_String_Regex.match);
                          return {
                              type: pair.type,
                              result: Data_Functor.map(Data_Either.functorEither)(m(s))(pair.regex)
                          };
                      };
                  };
                  return Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(doMatch)(allRegex);
              })();
              var matchResults = Control_Apply.apply(Data_Array_NonEmpty_Internal.applyNonEmptyArray)(matchers)(Control_Applicative.pure(Data_Array_NonEmpty_Internal.applicativeNonEmptyArray)(str));
              var possibleToks = (function () {
                  var tokens = possibleTokens(matchResults)(c)(l);
                  var v = Data_Array_NonEmpty.fromArray(tokens);
                  if (v instanceof Data_Maybe.Nothing) {
                      var fail = {
                          type: FAIL.value,
                          lexeme: str,
                          line: l,
                          column: c
                      };
                      return Data_Array_NonEmpty.singleton(fail);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  throw new Error("Failed pattern match at Lexer (line 97, column 17 - line 106, column 36): " + [ v.constructor.name ]);
              })();
              var bestToken = chooseBest(possibleToks);
              var $76 = Data_String_CodePoints.length(str) === 0;
              if ($76) {
                  return [  ];
              };
              if (bestToken.type instanceof FAIL) {
                  return [ bestToken ];
              };
              var resultLength = Data_String_CodePoints.length(bestToken.lexeme);
              var remaining = Data_String_CodePoints.drop(resultLength)(str);
              var nextLine = (function () {
                  var $78 = Data_Eq.notEq(eqTokenType)(bestToken.type)(WhiteSpace.value);
                  if ($78) {
                      return l;
                  };
                  return l + newlineCount(bestToken.lexeme) | 0;
              })();
              var nextColumn = (function () {
                  var $79 = Data_Eq.notEq(eqTokenType)(bestToken.type)(WhiteSpace.value);
                  if ($79) {
                      return c + resultLength | 0;
                  };
                  return newColumnCount(bestToken.lexeme)(c);
              })();
              return Data_Array.cons(bestToken)(doLex(remaining)(nextColumn)(nextLine));
          };
      };
  };
  var lex = function (str) {
      var tokens = doLex(str)(0)(0);
      var removeWhiteSpace = function (toks) {
          var isNotWhitespace = function (x) {
              return Data_Eq.notEq(eqTokenType)(x.type)(WhiteSpace.value);
          };
          return Data_Array.filter(isNotWhitespace)(toks);
      };
      return removeWhiteSpace(tokens);
  };
  exports["NormalHeader"] = NormalHeader;
  exports["ErrorHeader"] = ErrorHeader;
  exports["DefaultHeader"] = DefaultHeader;
  exports["Regex"] = Regex;
  exports["ErrorMessage"] = ErrorMessage;
  exports["Terminator"] = Terminator;
  exports["Name"] = Name;
  exports["FAIL"] = FAIL;
  exports["WhiteSpace"] = WhiteSpace;
  exports["Default"] = Default;
  exports["lex"] = lex;
  exports["eqTokenType"] = eqTokenType;
})(PS);
(function(exports) {
  "use strict";

  exports.defer = function (thunk) {
    var v = null;
    return function() {
      if (thunk === undefined) return v;

      v = thunk();
      thunk = undefined; // eslint-disable-line no-param-reassign
      return v;
    };
  };

  exports.force = function (l) {
    return l();
  };
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Lazy"] = $PS["Data.Lazy"] || {};
  var exports = $PS["Data.Lazy"];
  var $foreign = $PS["Data.Lazy"];
  exports["defer"] = $foreign.defer;
  exports["force"] = $foreign.force;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];                                   
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  exports["unwrap"] = unwrap;
  exports["Newtype"] = Newtype;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.List.Lazy.Types"] = $PS["Data.List.Lazy.Types"] || {};
  var exports = $PS["Data.List.Lazy.Types"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Lazy = $PS["Data.Lazy"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];                              
  var List = function (x) {
      return x;
  };
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var nil = List(Data_Lazy.defer(function (v) {
      return Nil.value;
  }));             
  var newtypeList = new Data_Newtype.Newtype(function (n) {
      return n;
  }, List);
  var step = (function () {
      var $215 = Data_Newtype.unwrap(newtypeList);
      return function ($216) {
          return Data_Lazy.force($215($216));
      };
  })();
  var showList = function (dictShow) {
      return new Data_Show.Show(function (xs) {
          var go = function (v) {
              if (v instanceof Nil) {
                  return "Nil";
              };
              if (v instanceof Cons) {
                  return "(Cons " + (Data_Show.show(dictShow)(v.value0) + (" " + (go(step(v.value1)) + ")")));
              };
              throw new Error("Failed pattern match at Data.List.Lazy.Types (line 64, column 5 - line 64, column 19): " + [ v.constructor.name ]);
          };
          return "fromStrict (" + (go(step(xs)) + ")");
      });
  };
  var cons = function (x) {
      return function (xs) {
          return List(Data_Lazy.defer(function (v) {
              return new Cons(x, xs);
          }));
      };
  };
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (b) {
              return function (a) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(b)(f(a));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (op) {
      var go = function ($copy_b) {
          return function ($copy_xs) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, xs) {
                  var v = step(xs);
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = op(b)(v.value0);
                      $copy_xs = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Lazy.Types (line 122, column 7 - line 124, column 40): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_xs);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (op) {
      return function (z) {
          return function (xs) {
              var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(cons))(nil);
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(op))(z)(rev(xs));
          };
      };
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["step"] = step;
  exports["nil"] = nil;
  exports["cons"] = cons;
  exports["showList"] = showList;
  exports["foldableList"] = foldableList;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.List.Lazy"] = $PS["Data.List.Lazy"] || {};
  var exports = $PS["Data.List.Lazy"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Lazy_Types = $PS["Data.List.Lazy.Types"];
  var Data_Maybe = $PS["Data.Maybe"];                                          
  var uncons = function (xs) {
      var v = Data_List_Lazy_Types.step(xs);
      if (v instanceof Data_List_Lazy_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Lazy_Types.Cons) {
          return new Data_Maybe.Just({
              head: v.value0,
              tail: v.value1
          });
      };
      throw new Error("Failed pattern match at Data.List.Lazy (line 285, column 13 - line 287, column 44): " + [ v.constructor.name ]);
  };
  var tail = function (xs) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return v.tail;
      })(uncons(xs));
  };
  var length = Data_Foldable.foldl(Data_List_Lazy_Types.foldableList)(function (l) {
      return function (v) {
          return l + 1 | 0;
      };
  })(0);
  var head = function (xs) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return v.head;
      })(uncons(xs));
  };
  exports["length"] = length;
  exports["head"] = head;
  exports["tail"] = tail;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Generic.Rep.Bounded"] = $PS["Data.Generic.Rep.Bounded"] || {};
  var exports = $PS["Data.Generic.Rep.Bounded"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];                
  var GenericTop = function (genericTop$prime) {
      this["genericTop'"] = genericTop$prime;
  };
  var GenericBottom = function (genericBottom$prime) {
      this["genericBottom'"] = genericBottom$prime;
  };
  var genericTopNoArguments = new GenericTop(Data_Generic_Rep.NoArguments.value);
  var genericTop$prime = function (dict) {
      return dict["genericTop'"];
  };
  var genericTopConstructor = function (dictGenericTop) {
      return new GenericTop(genericTop$prime(dictGenericTop));
  };
  var genericBottomNoArguments = new GenericBottom(Data_Generic_Rep.NoArguments.value);
  var genericBottom$prime = function (dict) {
      return dict["genericBottom'"];
  };
  var genericBottomConstructor = function (dictGenericBottom) {
      return new GenericBottom(genericBottom$prime(dictGenericBottom));
  };
  var genericBottomSum = function (dictGenericBottom) {
      return new GenericBottom(new Data_Generic_Rep.Inl(genericBottom$prime(dictGenericBottom)));
  };
  exports["genericBottom'"] = genericBottom$prime;
  exports["genericTop'"] = genericTop$prime;
  exports["genericBottomNoArguments"] = genericBottomNoArguments;
  exports["genericBottomSum"] = genericBottomSum;
  exports["genericBottomConstructor"] = genericBottomConstructor;
  exports["genericTopNoArguments"] = genericTopNoArguments;
  exports["genericTopConstructor"] = genericTopConstructor;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Generic.Rep.Enum"] = $PS["Data.Generic.Rep.Enum"] || {};
  var exports = $PS["Data.Generic.Rep.Enum"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Bounded = $PS["Data.Generic.Rep.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];                    
  var GenericEnum = function (genericPred$prime, genericSucc$prime) {
      this["genericPred'"] = genericPred$prime;
      this["genericSucc'"] = genericSucc$prime;
  };
  var genericSucc$prime = function (dict) {
      return dict["genericSucc'"];
  };
  var genericSucc = function (dictGeneric) {
      return function (dictGenericEnum) {
          var $93 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.to(dictGeneric));
          var $94 = genericSucc$prime(dictGenericEnum);
          var $95 = Data_Generic_Rep.from(dictGeneric);
          return function ($96) {
              return $93($94($95($96)));
          };
      };
  };
  var genericPred$prime = function (dict) {
      return dict["genericPred'"];
  };
  var genericPred = function (dictGeneric) {
      return function (dictGenericEnum) {
          var $97 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.to(dictGeneric));
          var $98 = genericPred$prime(dictGenericEnum);
          var $99 = Data_Generic_Rep.from(dictGeneric);
          return function ($100) {
              return $97($98($99($100)));
          };
      };
  };
  var genericEnumSum = function (dictGenericEnum) {
      return function (dictGenericTop) {
          return function (dictGenericEnum1) {
              return function (dictGenericBottom) {
                  return new GenericEnum(function (v) {
                      if (v instanceof Data_Generic_Rep.Inl) {
                          return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Inl.create)(genericPred$prime(dictGenericEnum)(v.value0));
                      };
                      if (v instanceof Data_Generic_Rep.Inr) {
                          var v1 = genericPred$prime(dictGenericEnum1)(v.value0);
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return new Data_Maybe.Just(new Data_Generic_Rep.Inl(Data_Generic_Rep_Bounded["genericTop'"](dictGenericTop)));
                          };
                          if (v1 instanceof Data_Maybe.Just) {
                              return new Data_Maybe.Just(new Data_Generic_Rep.Inr(v1.value0));
                          };
                          throw new Error("Failed pattern match at Data.Generic.Rep.Enum (line 30, column 14 - line 32, column 31): " + [ v1.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Data.Generic.Rep.Enum (line 28, column 18 - line 32, column 31): " + [ v.constructor.name ]);
                  }, function (v) {
                      if (v instanceof Data_Generic_Rep.Inl) {
                          var v1 = genericSucc$prime(dictGenericEnum)(v.value0);
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return new Data_Maybe.Just(new Data_Generic_Rep.Inr(Data_Generic_Rep_Bounded["genericBottom'"](dictGenericBottom)));
                          };
                          if (v1 instanceof Data_Maybe.Just) {
                              return new Data_Maybe.Just(new Data_Generic_Rep.Inl(v1.value0));
                          };
                          throw new Error("Failed pattern match at Data.Generic.Rep.Enum (line 34, column 14 - line 36, column 31): " + [ v1.constructor.name ]);
                      };
                      if (v instanceof Data_Generic_Rep.Inr) {
                          return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Inr.create)(genericSucc$prime(dictGenericEnum1)(v.value0));
                      };
                      throw new Error("Failed pattern match at Data.Generic.Rep.Enum (line 33, column 18 - line 37, column 36): " + [ v.constructor.name ]);
                  });
              };
          };
      };
  };
  var genericEnumNoArguments = new GenericEnum(function (v) {
      return Data_Maybe.Nothing.value;
  }, function (v) {
      return Data_Maybe.Nothing.value;
  });
  var genericEnumConstructor = function (dictGenericEnum) {
      return new GenericEnum(function (v) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Constructor)(genericPred$prime(dictGenericEnum)(v));
      }, function (v) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Generic_Rep.Constructor)(genericSucc$prime(dictGenericEnum)(v));
      });
  };
  exports["genericPred"] = genericPred;
  exports["genericSucc"] = genericSucc;
  exports["genericEnumNoArguments"] = genericEnumNoArguments;
  exports["genericEnumConstructor"] = genericEnumConstructor;
  exports["genericEnumSum"] = genericEnumSum;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Generic.Rep.Ord"] = $PS["Data.Generic.Rep.Ord"] || {};
  var exports = $PS["Data.Generic.Rep.Ord"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Ordering = $PS["Data.Ordering"];                
  var GenericOrd = function (genericCompare$prime) {
      this["genericCompare'"] = genericCompare$prime;
  }; 
  var genericOrdNoArguments = new GenericOrd(function (v) {
      return function (v1) {
          return Data_Ordering.EQ.value;
      };
  });
  var genericCompare$prime = function (dict) {
      return dict["genericCompare'"];
  };
  var genericOrdConstructor = function (dictGenericOrd) {
      return new GenericOrd(function (v) {
          return function (v1) {
              return genericCompare$prime(dictGenericOrd)(v)(v1);
          };
      });
  };
  var genericOrdSum = function (dictGenericOrd) {
      return function (dictGenericOrd1) {
          return new GenericOrd(function (v) {
              return function (v1) {
                  if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inl) {
                      return genericCompare$prime(dictGenericOrd)(v.value0)(v1.value0);
                  };
                  if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inr) {
                      return genericCompare$prime(dictGenericOrd1)(v.value0)(v1.value0);
                  };
                  if (v instanceof Data_Generic_Rep.Inl && v1 instanceof Data_Generic_Rep.Inr) {
                      return Data_Ordering.LT.value;
                  };
                  if (v instanceof Data_Generic_Rep.Inr && v1 instanceof Data_Generic_Rep.Inl) {
                      return Data_Ordering.GT.value;
                  };
                  throw new Error("Failed pattern match at Data.Generic.Rep.Ord (line 19, column 1 - line 23, column 41): " + [ v.constructor.name, v1.constructor.name ]);
              };
          });
      };
  };
  var genericCompare = function (dictGeneric) {
      return function (dictGenericOrd) {
          return function (x) {
              return function (y) {
                  return genericCompare$prime(dictGenericOrd)(Data_Generic_Rep.from(dictGeneric)(x))(Data_Generic_Rep.from(dictGeneric)(y));
              };
          };
      };
  };
  exports["genericCompare"] = genericCompare;
  exports["genericOrdNoArguments"] = genericOrdNoArguments;
  exports["genericOrdSum"] = genericOrdSum;
  exports["genericOrdConstructor"] = genericOrdConstructor;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Data.Generic.Rep.Show"] = $PS["Data.Generic.Rep.Show"] || {};
  var exports = $PS["Data.Generic.Rep.Show"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];                
  var GenericShowArgs = function (genericShowArgs) {
      this.genericShowArgs = genericShowArgs;
  };
  var GenericShow = function (genericShow$prime) {
      this["genericShow'"] = genericShow$prime;
  };
  var genericShowArgsNoArguments = new GenericShowArgs(function (v) {
      return [  ];
  });
  var genericShowArgsArgument = function (dictShow) {
      return new GenericShowArgs(function (v) {
          return [ Data_Show.show(dictShow)(v) ];
      });
  };
  var genericShowArgs = function (dict) {
      return dict.genericShowArgs;
  };
  var genericShowArgsProduct = function (dictGenericShowArgs) {
      return function (dictGenericShowArgs1) {
          return new GenericShowArgs(function (v) {
              return Data_Semigroup.append(Data_Semigroup.semigroupArray)(genericShowArgs(dictGenericShowArgs)(v.value0))(genericShowArgs(dictGenericShowArgs1)(v.value1));
          });
      };
  };
  var genericShowConstructor = function (dictGenericShowArgs) {
      return function (dictIsSymbol) {
          return new GenericShow(function (v) {
              var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var v1 = genericShowArgs(dictGenericShowArgs)(v);
              if (v1.length === 0) {
                  return ctor;
              };
              return "(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ ctor ])(v1)) + ")");
          });
      };
  };
  var genericShow$prime = function (dict) {
      return dict["genericShow'"];
  }; 
  var genericShowSum = function (dictGenericShow) {
      return function (dictGenericShow1) {
          return new GenericShow(function (v) {
              if (v instanceof Data_Generic_Rep.Inl) {
                  return genericShow$prime(dictGenericShow)(v.value0);
              };
              if (v instanceof Data_Generic_Rep.Inr) {
                  return genericShow$prime(dictGenericShow1)(v.value0);
              };
              throw new Error("Failed pattern match at Data.Generic.Rep.Show (line 26, column 1 - line 28, column 40): " + [ v.constructor.name ]);
          });
      };
  };
  var genericShow = function (dictGeneric) {
      return function (dictGenericShow) {
          return function (x) {
              return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
          };
      };
  };
  exports["genericShow"] = genericShow;
  exports["genericShowArgsNoArguments"] = genericShowArgsNoArguments;
  exports["genericShowSum"] = genericShowSum;
  exports["genericShowArgsProduct"] = genericShowArgsProduct;
  exports["genericShowConstructor"] = genericShowConstructor;
  exports["genericShowArgsArgument"] = genericShowArgsArgument;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["ParserTypes"] = $PS["ParserTypes"] || {};
  var exports = $PS["ParserTypes"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = $PS["Data.Generic.Rep.Show"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];    
  var NormalHeader = (function () {
      function NormalHeader() {

      };
      NormalHeader.value = new NormalHeader();
      return NormalHeader;
  })();
  var ErrorHeader = (function () {
      function ErrorHeader() {

      };
      ErrorHeader.value = new ErrorHeader();
      return ErrorHeader;
  })();
  var DefaultHeader = (function () {
      function DefaultHeader() {

      };
      DefaultHeader.value = new DefaultHeader();
      return DefaultHeader;
  })();
  var Regex = (function () {
      function Regex() {

      };
      Regex.value = new Regex();
      return Regex;
  })();
  var ErrorMessage = (function () {
      function ErrorMessage() {

      };
      ErrorMessage.value = new ErrorMessage();
      return ErrorMessage;
  })();
  var Terminator = (function () {
      function Terminator() {

      };
      Terminator.value = new Terminator();
      return Terminator;
  })();
  var Name = (function () {
      function Name() {

      };
      Name.value = new Name();
      return Name;
  })();
  var FAIL = (function () {
      function FAIL() {

      };
      FAIL.value = new FAIL();
      return FAIL;
  })();
  var Default = (function () {
      function Default() {

      };
      Default.value = new Default();
      return Default;
  })();
  var EOF = (function () {
      function EOF() {

      };
      EOF.value = new EOF();
      return EOF;
  })();
  var DProgram = (function () {
      function DProgram() {

      };
      DProgram.value = new DProgram();
      return DProgram;
  })();
  var DNormalTokens = (function () {
      function DNormalTokens() {

      };
      DNormalTokens.value = new DNormalTokens();
      return DNormalTokens;
  })();
  var DErrorTokens = (function () {
      function DErrorTokens() {

      };
      DErrorTokens.value = new DErrorTokens();
      return DErrorTokens;
  })();
  var DDefaultTokens = (function () {
      function DDefaultTokens() {

      };
      DDefaultTokens.value = new DDefaultTokens();
      return DDefaultTokens;
  })();
  var DNormalSpecs = (function () {
      function DNormalSpecs() {

      };
      DNormalSpecs.value = new DNormalSpecs();
      return DNormalSpecs;
  })();
  var DNormalSpec = (function () {
      function DNormalSpec() {

      };
      DNormalSpec.value = new DNormalSpec();
      return DNormalSpec;
  })();
  var DErrorSpecs = (function () {
      function DErrorSpecs() {

      };
      DErrorSpecs.value = new DErrorSpecs();
      return DErrorSpecs;
  })();
  var DErrorSpec = (function () {
      function DErrorSpec() {

      };
      DErrorSpec.value = new DErrorSpec();
      return DErrorSpec;
  })();
  var DDefaultSpecs = (function () {
      function DDefaultSpecs() {

      };
      DDefaultSpecs.value = new DDefaultSpecs();
      return DDefaultSpecs;
  })();
  var DDefaultError = (function () {
      function DDefaultError() {

      };
      DDefaultError.value = new DDefaultError();
      return DDefaultError;
  })();
  var DOptionalSync = (function () {
      function DOptionalSync() {

      };
      DOptionalSync.value = new DOptionalSync();
      return DOptionalSync;
  })();
  var DNormalHeader = (function () {
      function DNormalHeader() {

      };
      DNormalHeader.value = new DNormalHeader();
      return DNormalHeader;
  })();
  var DErrorHeader = (function () {
      function DErrorHeader() {

      };
      DErrorHeader.value = new DErrorHeader();
      return DErrorHeader;
  })();
  var DDefaultHeader = (function () {
      function DDefaultHeader() {

      };
      DDefaultHeader.value = new DDefaultHeader();
      return DDefaultHeader;
  })();
  var DRegex = (function () {
      function DRegex() {

      };
      DRegex.value = new DRegex();
      return DRegex;
  })();
  var DErrorMessage = (function () {
      function DErrorMessage() {

      };
      DErrorMessage.value = new DErrorMessage();
      return DErrorMessage;
  })();
  var DTerminator = (function () {
      function DTerminator() {

      };
      DTerminator.value = new DTerminator();
      return DTerminator;
  })();
  var DName = (function () {
      function DName() {

      };
      DName.value = new DName();
      return DName;
  })();
  var DFAIL = (function () {
      function DFAIL() {

      };
      DFAIL.value = new DFAIL();
      return DFAIL;
  })();
  var DDefault = (function () {
      function DDefault() {

      };
      DDefault.value = new DDefault();
      return DDefault;
  })();
  var DEof = (function () {
      function DEof() {

      };
      DEof.value = new DEof();
      return DEof;
  })();
  var DoneWithNode = (function () {
      function DoneWithNode() {

      };
      DoneWithNode.value = new DoneWithNode();
      return DoneWithNode;
  })();
  var NProgram = (function () {
      function NProgram(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      NProgram.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new NProgram(value0, value1, value2);
              };
          };
      };
      return NProgram;
  })();
  var NNormalSpecs = (function () {
      function NNormalSpecs(value0) {
          this.value0 = value0;
      };
      NNormalSpecs.create = function (value0) {
          return new NNormalSpecs(value0);
      };
      return NNormalSpecs;
  })();
  var NErrorSpecs = (function () {
      function NErrorSpecs(value0) {
          this.value0 = value0;
      };
      NErrorSpecs.create = function (value0) {
          return new NErrorSpecs(value0);
      };
      return NErrorSpecs;
  })();
  var NDefaultSpecs = (function () {
      function NDefaultSpecs(value0) {
          this.value0 = value0;
      };
      NDefaultSpecs.create = function (value0) {
          return new NDefaultSpecs(value0);
      };
      return NDefaultSpecs;
  })();
  var NNormalSpec = (function () {
      function NNormalSpec(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NNormalSpec.create = function (value0) {
          return function (value1) {
              return new NNormalSpec(value0, value1);
          };
      };
      return NNormalSpec;
  })();
  var NErrorSpec = (function () {
      function NErrorSpec(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      NErrorSpec.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new NErrorSpec(value0, value1, value2);
              };
          };
      };
      return NErrorSpec;
  })();
  var NRegex = (function () {
      function NRegex(value0) {
          this.value0 = value0;
      };
      NRegex.create = function (value0) {
          return new NRegex(value0);
      };
      return NRegex;
  })();
  var NName = (function () {
      function NName(value0) {
          this.value0 = value0;
      };
      NName.create = function (value0) {
          return new NName(value0);
      };
      return NName;
  })();
  var NErrorMessage = (function () {
      function NErrorMessage(value0) {
          this.value0 = value0;
      };
      NErrorMessage.create = function (value0) {
          return new NErrorMessage(value0);
      };
      return NErrorMessage;
  })();
  var NDefaultError = (function () {
      function NDefaultError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NDefaultError.create = function (value0) {
          return function (value1) {
              return new NDefaultError(value0, value1);
          };
      };
      return NDefaultError;
  })();
  var ValidForAst = function (validForAst) {
      this.validForAst = validForAst;
  };
  var validForAst = function (dict) {
      return dict.validForAst;
  };
  var validAstTokenType = new ValidForAst(function (t) {
      if (t instanceof NormalHeader) {
          return false;
      };
      if (t instanceof ErrorHeader) {
          return false;
      };
      if (t instanceof DefaultHeader) {
          return false;
      };
      if (t instanceof Regex) {
          return true;
      };
      if (t instanceof ErrorMessage) {
          return true;
      };
      if (t instanceof Terminator) {
          return false;
      };
      if (t instanceof Name) {
          return true;
      };
      if (t instanceof FAIL) {
          return false;
      };
      if (t instanceof Default) {
          return false;
      };
      if (t instanceof EOF) {
          return false;
      };
      throw new Error("Failed pattern match at ParserTypes (line 41, column 21 - line 51, column 21): " + [ t.constructor.name ]);
  });
  var validAstDerivType = new ValidForAst(function (d) {
      if (d instanceof DProgram) {
          return true;
      };
      if (d instanceof DNormalSpecs) {
          return true;
      };
      if (d instanceof DNormalSpec) {
          return true;
      };
      if (d instanceof DErrorSpecs) {
          return true;
      };
      if (d instanceof DErrorSpec) {
          return true;
      };
      if (d instanceof DDefaultSpecs) {
          return true;
      };
      if (d instanceof DDefaultError) {
          return true;
      };
      if (d instanceof DName) {
          return true;
      };
      if (d instanceof DRegex) {
          return true;
      };
      if (d instanceof DErrorMessage) {
          return true;
      };
      if (d instanceof DNormalTokens) {
          return false;
      };
      if (d instanceof DErrorTokens) {
          return false;
      };
      if (d instanceof DDefaultTokens) {
          return false;
      };
      if (d instanceof DNormalHeader) {
          return false;
      };
      if (d instanceof DErrorHeader) {
          return false;
      };
      if (d instanceof DDefaultHeader) {
          return false;
      };
      if (d instanceof DOptionalSync) {
          return false;
      };
      if (d instanceof DDefault) {
          return false;
      };
      if (d instanceof DTerminator) {
          return false;
      };
      if (d instanceof DEof) {
          return false;
      };
      if (d instanceof DFAIL) {
          return false;
      };
      if (d instanceof DoneWithNode) {
          return false;
      };
      throw new Error("Failed pattern match at ParserTypes (line 249, column 21 - line 273, column 30): " + [ d.constructor.name ]);
  });
  var genericTokenType = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof NormalHeader) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof ErrorHeader) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof DefaultHeader) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
      };
      if (x instanceof Regex) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
      };
      if (x instanceof ErrorMessage) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));
      };
      if (x instanceof Terminator) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))));
      };
      if (x instanceof Name) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))));
      };
      if (x instanceof FAIL) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))));
      };
      if (x instanceof Default) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))));
      };
      if (x instanceof EOF) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)))))))));
      };
      throw new Error("Failed pattern match at ParserTypes (line 37, column 1 - line 37, column 56): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return NormalHeader.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return ErrorHeader.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
          return DefaultHeader.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
          return Regex.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
          return ErrorMessage.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
          return Terminator.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {
          return Name.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))) {
          return FAIL.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))) {
          return Default.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))))))) {
          return EOF.value;
      };
      throw new Error("Failed pattern match at ParserTypes (line 37, column 1 - line 37, column 56): " + [ x.constructor.name ]);
  });
  var showTokenType = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericTokenType)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "NormalHeader";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "ErrorHeader";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DefaultHeader";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Regex";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "ErrorMessage";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Terminator";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Name";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "FAIL";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Default";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "EOF";
  })))))))))))));
  var genericDerivType = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof DProgram) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof DNormalTokens) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof DErrorTokens) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
      };
      if (x instanceof DDefaultTokens) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
      };
      if (x instanceof DNormalSpecs) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));
      };
      if (x instanceof DNormalSpec) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))));
      };
      if (x instanceof DErrorSpecs) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))));
      };
      if (x instanceof DErrorSpec) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))));
      };
      if (x instanceof DDefaultSpecs) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))));
      };
      if (x instanceof DDefaultError) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))));
      };
      if (x instanceof DOptionalSync) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))));
      };
      if (x instanceof DNormalHeader) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))));
      };
      if (x instanceof DErrorHeader) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))))));
      };
      if (x instanceof DDefaultHeader) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))))));
      };
      if (x instanceof DRegex) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))))))));
      };
      if (x instanceof DErrorMessage) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))))))));
      };
      if (x instanceof DTerminator) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))))))))));
      };
      if (x instanceof DName) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))))))))));
      };
      if (x instanceof DFAIL) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))))))))))));
      };
      if (x instanceof DDefault) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))))))))))))))))));
      };
      if (x instanceof DEof) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))))))))))))))))))));
      };
      if (x instanceof DoneWithNode) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)))))))))))))))))))));
      };
      throw new Error("Failed pattern match at ParserTypes (line 245, column 1 - line 245, column 61): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return DProgram.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return DNormalTokens.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
          return DErrorTokens.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
          return DDefaultTokens.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
          return DNormalSpecs.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
          return DNormalSpec.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {
          return DErrorSpecs.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))) {
          return DErrorSpec.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))) {
          return DDefaultSpecs.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))) {
          return DDefaultError.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))) {
          return DOptionalSync.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))) {
          return DNormalHeader.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))) {
          return DErrorHeader.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))) {
          return DDefaultHeader.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))) {
          return DRegex.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))) {
          return DErrorMessage.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))) {
          return DTerminator.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))))) {
          return DName.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))))) {
          return DFAIL.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))))))))))))) {
          return DDefault.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))))))))))))))) {
          return DEof.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))))))))))))))))))) {
          return DoneWithNode.value;
      };
      throw new Error("Failed pattern match at ParserTypes (line 245, column 1 - line 245, column 61): " + [ x.constructor.name ]);
  });
  var showDerivationType = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericDerivType)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DProgram";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DNormalTokens";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DErrorTokens";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DDefaultTokens";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DNormalSpecs";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DNormalSpec";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DErrorSpecs";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DErrorSpec";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DDefaultSpecs";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DDefaultError";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DOptionalSync";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DNormalHeader";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DErrorHeader";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DDefaultHeader";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DRegex";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DErrorMessage";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DTerminator";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DName";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DFAIL";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DDefault";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DEof";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DoneWithNode";
  })))))))))))))))))))))))));
  var equals = function (v) {
      return function (v1) {
          if (v instanceof NormalHeader && v1 instanceof DNormalHeader) {
              return true;
          };
          if (v instanceof NormalHeader) {
              return false;
          };
          if (v instanceof ErrorHeader && v1 instanceof DErrorHeader) {
              return true;
          };
          if (v instanceof ErrorHeader) {
              return false;
          };
          if (v instanceof DefaultHeader && v1 instanceof DDefaultHeader) {
              return true;
          };
          if (v instanceof DefaultHeader) {
              return false;
          };
          if (v instanceof Regex && v1 instanceof DRegex) {
              return true;
          };
          if (v instanceof Regex) {
              return false;
          };
          if (v instanceof ErrorMessage && v1 instanceof DErrorMessage) {
              return true;
          };
          if (v instanceof ErrorMessage) {
              return false;
          };
          if (v instanceof Terminator && v1 instanceof DTerminator) {
              return true;
          };
          if (v instanceof Terminator) {
              return false;
          };
          if (v instanceof Name && v1 instanceof DName) {
              return true;
          };
          if (v instanceof Name) {
              return false;
          };
          if (v instanceof Default && v1 instanceof DDefault) {
              return true;
          };
          if (v instanceof Default) {
              return false;
          };
          if (v instanceof EOF && v1 instanceof DEof) {
              return true;
          };
          if (v instanceof EOF) {
              return false;
          };
          if (v instanceof FAIL) {
              return false;
          };
          throw new Error("Failed pattern match at ParserTypes (line 275, column 1 - line 275, column 49): " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  exports["NormalHeader"] = NormalHeader;
  exports["ErrorHeader"] = ErrorHeader;
  exports["DefaultHeader"] = DefaultHeader;
  exports["Regex"] = Regex;
  exports["ErrorMessage"] = ErrorMessage;
  exports["Terminator"] = Terminator;
  exports["Name"] = Name;
  exports["FAIL"] = FAIL;
  exports["Default"] = Default;
  exports["EOF"] = EOF;
  exports["NProgram"] = NProgram;
  exports["NNormalSpecs"] = NNormalSpecs;
  exports["NErrorSpecs"] = NErrorSpecs;
  exports["NDefaultSpecs"] = NDefaultSpecs;
  exports["NNormalSpec"] = NNormalSpec;
  exports["NErrorSpec"] = NErrorSpec;
  exports["NRegex"] = NRegex;
  exports["NName"] = NName;
  exports["NErrorMessage"] = NErrorMessage;
  exports["NDefaultError"] = NDefaultError;
  exports["DProgram"] = DProgram;
  exports["DNormalTokens"] = DNormalTokens;
  exports["DErrorTokens"] = DErrorTokens;
  exports["DDefaultTokens"] = DDefaultTokens;
  exports["DNormalSpecs"] = DNormalSpecs;
  exports["DNormalSpec"] = DNormalSpec;
  exports["DErrorSpecs"] = DErrorSpecs;
  exports["DErrorSpec"] = DErrorSpec;
  exports["DDefaultSpecs"] = DDefaultSpecs;
  exports["DDefaultError"] = DDefaultError;
  exports["DOptionalSync"] = DOptionalSync;
  exports["DNormalHeader"] = DNormalHeader;
  exports["DErrorHeader"] = DErrorHeader;
  exports["DDefaultHeader"] = DDefaultHeader;
  exports["DRegex"] = DRegex;
  exports["DErrorMessage"] = DErrorMessage;
  exports["DTerminator"] = DTerminator;
  exports["DName"] = DName;
  exports["DFAIL"] = DFAIL;
  exports["DDefault"] = DDefault;
  exports["DEof"] = DEof;
  exports["DoneWithNode"] = DoneWithNode;
  exports["equals"] = equals;
  exports["validForAst"] = validForAst;
  exports["showTokenType"] = showTokenType;
  exports["validAstTokenType"] = validAstTokenType;
  exports["showDerivationType"] = showDerivationType;
  exports["validAstDerivType"] = validAstDerivType;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["ParserAST"] = $PS["ParserAST"] || {};
  var exports = $PS["ParserAST"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Bounded = $PS["Data.Generic.Rep.Bounded"];
  var Data_Generic_Rep_Enum = $PS["Data.Generic.Rep.Enum"];
  var Data_Generic_Rep_Eq = $PS["Data.Generic.Rep.Eq"];
  var Data_Generic_Rep_Ord = $PS["Data.Generic.Rep.Ord"];
  var Data_Generic_Rep_Show = $PS["Data.Generic.Rep.Show"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_List_Lazy = $PS["Data.List.Lazy"];
  var Data_List_Lazy_Types = $PS["Data.List.Lazy.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Traversable = $PS["Data.Traversable"];
  var ParserTypes = $PS["ParserTypes"];                
  var Regex_ = (function () {
      function Regex_() {

      };
      Regex_.value = new Regex_();
      return Regex_;
  })();
  var NormalSpecs_ = (function () {
      function NormalSpecs_() {

      };
      NormalSpecs_.value = new NormalSpecs_();
      return NormalSpecs_;
  })();
  var ErrorSpecs_ = (function () {
      function ErrorSpecs_() {

      };
      ErrorSpecs_.value = new ErrorSpecs_();
      return ErrorSpecs_;
  })();
  var DefaultSpecs_ = (function () {
      function DefaultSpecs_() {

      };
      DefaultSpecs_.value = new DefaultSpecs_();
      return DefaultSpecs_;
  })();
  var Done_ = (function () {
      function Done_() {

      };
      Done_.value = new Done_();
      return Done_;
  })();
  var ArrayNormalSpecs = (function () {
      function ArrayNormalSpecs() {

      };
      ArrayNormalSpecs.value = new ArrayNormalSpecs();
      return ArrayNormalSpecs;
  })();
  var NormalName = (function () {
      function NormalName() {

      };
      NormalName.value = new NormalName();
      return NormalName;
  })();
  var NormalRegex = (function () {
      function NormalRegex() {

      };
      NormalRegex.value = new NormalRegex();
      return NormalRegex;
  })();
  var Name_ = (function () {
      function Name_() {

      };
      Name_.value = new Name_();
      return Name_;
  })();
  var ArrayErrorSpecs = (function () {
      function ArrayErrorSpecs() {

      };
      ArrayErrorSpecs.value = new ArrayErrorSpecs();
      return ArrayErrorSpecs;
  })();
  var ErrorName = (function () {
      function ErrorName() {

      };
      ErrorName.value = new ErrorName();
      return ErrorName;
  })();
  var ErrorEM = (function () {
      function ErrorEM() {

      };
      ErrorEM.value = new ErrorEM();
      return ErrorEM;
  })();
  var ErrorSync = (function () {
      function ErrorSync() {

      };
      ErrorSync.value = new ErrorSync();
      return ErrorSync;
  })();
  var ErrorMessage_ = (function () {
      function ErrorMessage_() {

      };
      ErrorMessage_.value = new ErrorMessage_();
      return ErrorMessage_;
  })();
  var ArrayDefaultSpecs = (function () {
      function ArrayDefaultSpecs() {

      };
      ArrayDefaultSpecs.value = new ArrayDefaultSpecs();
      return ArrayDefaultSpecs;
  })();
  var DefaultMessage = (function () {
      function DefaultMessage() {

      };
      DefaultMessage.value = new DefaultMessage();
      return DefaultMessage;
  })();
  var DefaultSync = (function () {
      function DefaultSync() {

      };
      DefaultSync.value = new DefaultSync();
      return DefaultSync;
  })();
  var Next = (function () {
      function Next() {

      };
      Next.value = new Next();
      return Next;
  })();
  var Up = (function () {
      function Up() {

      };
      Up.value = new Up();
      return Up;
  })();
  var Match = (function () {
      function Match(value0) {
          this.value0 = value0;
      };
      Match.create = function (value0) {
          return new Match(value0);
      };
      return Match;
  })();
  var AddDerivation = (function () {
      function AddDerivation(value0) {
          this.value0 = value0;
      };
      AddDerivation.create = function (value0) {
          return new AddDerivation(value0);
      };
      return AddDerivation;
  })();
  var P = (function () {
      function P(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      P.create = function (value0) {
          return function (value1) {
              return new P(value0, value1);
          };
      };
      return P;
  })();
  var NSS = (function () {
      function NSS(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NSS.create = function (value0) {
          return function (value1) {
              return new NSS(value0, value1);
          };
      };
      return NSS;
  })();
  var NS = (function () {
      function NS(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NS.create = function (value0) {
          return function (value1) {
              return new NS(value0, value1);
          };
      };
      return NS;
  })();
  var ESS = (function () {
      function ESS(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ESS.create = function (value0) {
          return function (value1) {
              return new ESS(value0, value1);
          };
      };
      return ESS;
  })();
  var ES = (function () {
      function ES(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ES.create = function (value0) {
          return function (value1) {
              return new ES(value0, value1);
          };
      };
      return ES;
  })();
  var DSS = (function () {
      function DSS(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      DSS.create = function (value0) {
          return function (value1) {
              return new DSS(value0, value1);
          };
      };
      return DSS;
  })();
  var DS = (function () {
      function DS(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      DS.create = function (value0) {
          return function (value1) {
              return new DS(value0, value1);
          };
      };
      return DS;
  })();
  var N = (function () {
      function N(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      N.create = function (value0) {
          return function (value1) {
              return new N(value0, value1);
          };
      };
      return N;
  })();
  var R = (function () {
      function R(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      R.create = function (value0) {
          return function (value1) {
              return new R(value0, value1);
          };
      };
      return R;
  })();
  var EM = (function () {
      function EM(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      EM.create = function (value0) {
          return function (value1) {
              return new EM(value0, value1);
          };
      };
      return EM;
  })();
  var Placeholder = (function () {
      function Placeholder(value0) {
          this.value0 = value0;
      };
      Placeholder.create = function (value0) {
          return new Placeholder(value0);
      };
      return Placeholder;
  })();
  var Successor = function (successor) {
      this.successor = successor;
  };
  var Parent = function (mergeToParent) {
      this.mergeToParent = mergeToParent;
  };
  var topAstStack = Data_List_Lazy.head;
  var toAst = function (v) {
      var makeRegex = function (r) {
          if (r instanceof Data_Maybe.Nothing) {
              return Data_Either.Left.create("Required regex was not found");
          };
          if (r instanceof Data_Maybe.Just && r.value0.token instanceof Data_Maybe.Nothing) {
              return Data_Either.Left.create("Required regex was not found");
          };
          if (r instanceof Data_Maybe.Just && r.value0.token instanceof Data_Maybe.Just) {
              return Data_Either.Right.create(new ParserTypes.NRegex(r.value0.token.value0));
          };
          throw new Error("Failed pattern match at ParserAST (line 123, column 23 - line 126, column 57): " + [ r.constructor.name ]);
      };
      var makeName = function (n) {
          if (n instanceof Data_Maybe.Nothing) {
              return Data_Either.Left.create("Required name was not found");
          };
          if (n instanceof Data_Maybe.Just && n.value0.token instanceof Data_Maybe.Nothing) {
              return Data_Either.Left.create("Required name was not found");
          };
          if (n instanceof Data_Maybe.Just && n.value0.token instanceof Data_Maybe.Just) {
              return Data_Either.Right.create(new ParserTypes.NName(n.value0.token.value0));
          };
          throw new Error("Failed pattern match at ParserAST (line 117, column 22 - line 120, column 56): " + [ n.constructor.name ]);
      };
      var makeNormalSpecs = function (n) {
          var makeNormalSpec = function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(makeName(v1.name))(function (name_) {
                  return Control_Bind.bind(Data_Either.bindEither)(makeRegex(v1.regex))(function (regex_) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new ParserTypes.NNormalSpec(name_, regex_));
                  });
              });
          };
          var makeNormalSpecs_ = function (arr) {
              var specs = Data_Functor.map(Data_Functor.functorArray)(makeNormalSpec)(arr);
              return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(specs);
          };
          if (n instanceof Data_Maybe.Nothing) {
              return Data_Either.Right.create(Data_Maybe.Nothing.value);
          };
          if (n instanceof Data_Maybe.Just) {
              return Control_Bind.bind(Data_Either.bindEither)(makeNormalSpecs_(n.value0.specs))(function (specs) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Maybe.Just(new ParserTypes.NNormalSpecs(specs)));
              });
          };
          throw new Error("Failed pattern match at ParserAST (line 53, column 29 - line 57, column 50): " + [ n.constructor.name ]);
      };
      var makeErrorMessage = function (e) {
          if (e instanceof Data_Maybe.Nothing) {
              return Data_Either.Left.create("Required error message was not found");
          };
          if (e instanceof Data_Maybe.Just && e.value0.token instanceof Data_Maybe.Nothing) {
              return Data_Either.Left.create("Required error message was not found");
          };
          if (e instanceof Data_Maybe.Just && e.value0.token instanceof Data_Maybe.Just) {
              return Data_Either.Right.create(new ParserTypes.NErrorMessage(e.value0.token.value0));
          };
          throw new Error("Failed pattern match at ParserAST (line 129, column 30 - line 132, column 64): " + [ e.constructor.name ]);
      };
      var makeErrorSpecs = function (e) {
          var makeErrorSpec = function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(makeName(v1.name))(function (name_) {
                  return Control_Bind.bind(Data_Either.bindEither)(makeErrorMessage(v1.error))(function (error_) {
                      var sync_ = (function () {
                          var v2 = makeName(v1.sync);
                          if (v2 instanceof Data_Either.Left) {
                              return Data_Maybe.Nothing.value;
                          };
                          if (v2 instanceof Data_Either.Right) {
                              return new Data_Maybe.Just(v2.value0);
                          };
                          throw new Error("Failed pattern match at ParserAST (line 88, column 33 - line 90, column 52): " + [ v2.constructor.name ]);
                      })();
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new ParserTypes.NErrorSpec(name_, error_, sync_));
                  });
              });
          };
          var makeErrorSpecs_ = function (arr) {
              var specs = Data_Functor.map(Data_Functor.functorArray)(makeErrorSpec)(arr);
              return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(specs);
          };
          if (e instanceof Data_Maybe.Nothing) {
              return new Data_Either.Right(Data_Maybe.Nothing.value);
          };
          if (e instanceof Data_Maybe.Just) {
              return Control_Bind.bind(Data_Either.bindEither)(makeErrorSpecs_(e.value0.specs))(function (specs) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Maybe.Just(new ParserTypes.NErrorSpecs(specs)));
              });
          };
          throw new Error("Failed pattern match at ParserAST (line 73, column 28 - line 77, column 48): " + [ e.constructor.name ]);
      };
      var makeDefaultSpecs = function (d) {
          var makeDefaultSpec = function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(makeErrorMessage(v1.error))(function (error_) {
                  var sync_ = (function () {
                      var v2 = makeName(v1.sync);
                      if (v2 instanceof Data_Either.Left) {
                          return Data_Maybe.Nothing.value;
                      };
                      if (v2 instanceof Data_Either.Right) {
                          return new Data_Maybe.Just(v2.value0);
                      };
                      throw new Error("Failed pattern match at ParserAST (line 110, column 33 - line 112, column 52): " + [ v2.constructor.name ]);
                  })();
                  return Control_Applicative.pure(Data_Either.applicativeEither)(new ParserTypes.NDefaultError(error_, sync_));
              });
          };
          var makeDefaultSpecs_ = function (arr) {
              var specs = Data_Functor.map(Data_Functor.functorArray)(makeDefaultSpec)(arr);
              return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(specs);
          };
          if (d instanceof Data_Maybe.Nothing) {
              return new Data_Either.Right(Data_Maybe.Nothing.value);
          };
          if (d instanceof Data_Maybe.Just) {
              return Control_Bind.bind(Data_Either.bindEither)(makeDefaultSpecs_(d.value0.specs))(function (specs) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Maybe.Just(new ParserTypes.NDefaultSpecs(specs)));
              });
          };
          throw new Error("Failed pattern match at ParserAST (line 96, column 30 - line 100, column 50): " + [ d.constructor.name ]);
      };
      return Control_Bind.bind(Data_Either.bindEither)(makeNormalSpecs(v.normal))(function (normalSpecs) {
          return Control_Bind.bind(Data_Either.bindEither)(makeErrorSpecs(v.error))(function (errorSpecs) {
              return Control_Bind.bind(Data_Either.bindEither)(makeDefaultSpecs(v["default"]))(function (defaultSpecs) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(new ParserTypes.NProgram(normalSpecs, errorSpecs, defaultSpecs));
              });
          });
      });
  };
  var successor = function (dict) {
      return dict.successor;
  };
  var sizeAstStack = Data_List_Lazy.length;
  var pushAstStack = Data_List_Lazy_Types.cons;
  var popAstStack = function (s) {
      var v = Data_List_Lazy.tail(s);
      if (v instanceof Data_Maybe.Nothing) {
          return s;
      };
      if (v instanceof Data_Maybe.Just) {
          return v.value0;
      };
      throw new Error("Failed pattern match at ParserAST (line 420, column 17 - line 422, column 22): " + [ v.constructor.name ]);
  };
  var replaceAstStack = function (stack) {
      return function (el) {
          return pushAstStack(el)(popAstStack(stack));
      };
  };
  var replaceState = function (v) {
      return function (el) {
          return {
              buildStack: replaceAstStack(v.buildStack)(el)
          };
      };
  };
  var mergeToParent = function (dict) {
      return dict.mergeToParent;
  };
  var maybeSucc = function (dictEnum) {
      return function (e) {
          var v = Data_Enum.succ(dictEnum)(e);
          if (v instanceof Data_Maybe.Nothing) {
              return e;
          };
          if (v instanceof Data_Maybe.Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at ParserAST (line 407, column 15 - line 409, column 16): " + [ v.constructor.name ]);
      };
  };
  var invalidParentError = function (dictShow) {
      return function (dictShow1) {
          return function (parent) {
              return function (sh) {
                  return Data_Either.Left.create("Invalid parent (" + (Data_Show.show(dictShow)(parent) + (") for " + Data_Show.show(dictShow1)(sh))));
              };
          };
      };
  };
  var genRegexLens = new Data_Generic_Rep.Generic(function (x) {
      return Data_Generic_Rep.NoArguments.value;
  }, function (x) {
      return Regex_.value;
  });
  var showRegexLens = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genRegexLens)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Regex_";
  }))));
  var genProgramLens = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof NormalSpecs_) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof ErrorSpecs_) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof DefaultSpecs_) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
      };
      if (x instanceof Done_) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)));
      };
      throw new Error("Failed pattern match at ParserAST (line 162, column 1 - line 162, column 56): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return NormalSpecs_.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return ErrorSpecs_.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
          return DefaultSpecs_.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {
          return Done_.value;
      };
      throw new Error("Failed pattern match at ParserAST (line 162, column 1 - line 162, column 56): " + [ x.constructor.name ]);
  });
  var showProgramLens = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genProgramLens)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "NormalSpecs_";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "ErrorSpecs_";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DefaultSpecs_";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Done_";
  })))))));
  var genNormalSpecsLens = new Data_Generic_Rep.Generic(function (x) {
      return Data_Generic_Rep.NoArguments.value;
  }, function (x) {
      return ArrayNormalSpecs.value;
  });
  var showNormalSpecsLens = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genNormalSpecsLens)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "ArrayNormalSpecs";
  }))));
  var genNormalSpecLens = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof NormalName) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof NormalRegex) {
          return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
      };
      throw new Error("Failed pattern match at ParserAST (line 190, column 1 - line 190, column 62): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return NormalName.value;
      };
      if (x instanceof Data_Generic_Rep.Inr) {
          return NormalRegex.value;
      };
      throw new Error("Failed pattern match at ParserAST (line 190, column 1 - line 190, column 62): " + [ x.constructor.name ]);
  });
  var showNormalSpecLens = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genNormalSpecLens)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "NormalName";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "NormalRegex";
  })))));
  var genNameLens = new Data_Generic_Rep.Generic(function (x) {
      return Data_Generic_Rep.NoArguments.value;
  }, function (x) {
      return Name_.value;
  });
  var showNameLens = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genNameLens)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Name_";
  }))));
  var genErrorSpecsLens = new Data_Generic_Rep.Generic(function (x) {
      return Data_Generic_Rep.NoArguments.value;
  }, function (x) {
      return ArrayErrorSpecs.value;
  });
  var showErrorSpecsLens = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genErrorSpecsLens)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "ArrayErrorSpecs";
  }))));
  var genErrorSpecLens = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof ErrorName) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof ErrorEM) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof ErrorSync) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
      };
      throw new Error("Failed pattern match at ParserAST (line 221, column 1 - line 221, column 60): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return ErrorName.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return ErrorEM.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
          return ErrorSync.value;
      };
      throw new Error("Failed pattern match at ParserAST (line 221, column 1 - line 221, column 60): " + [ x.constructor.name ]);
  });
  var showErrorSpecLens = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genErrorSpecLens)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "ErrorName";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "ErrorEM";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "ErrorSync";
  }))))));
  var genErrorMessageLens = new Data_Generic_Rep.Generic(function (x) {
      return Data_Generic_Rep.NoArguments.value;
  }, function (x) {
      return ErrorMessage_.value;
  });
  var showErrorMessageLens = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genErrorMessageLens)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "ErrorMessage_";
  }))));
  var genDefaultSpecsLens = new Data_Generic_Rep.Generic(function (x) {
      return Data_Generic_Rep.NoArguments.value;
  }, function (x) {
      return ArrayDefaultSpecs.value;
  });
  var showDefaultSpecsLens = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genDefaultSpecsLens)(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "ArrayDefaultSpecs";
  }))));
  var genDefaultSpecLens = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof DefaultMessage) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof DefaultSync) {
          return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
      };
      throw new Error("Failed pattern match at ParserAST (line 249, column 1 - line 249, column 64): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return DefaultMessage.value;
      };
      if (x instanceof Data_Generic_Rep.Inr) {
          return DefaultSync.value;
      };
      throw new Error("Failed pattern match at ParserAST (line 249, column 1 - line 249, column 64): " + [ x.constructor.name ]);
  });
  var showDefaultSpecLens = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genDefaultSpecLens)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DefaultMessage";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "DefaultSync";
  })))));
  var genAstStackEl = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof P) {
          return new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1));
      };
      if (x instanceof NSS) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)));
      };
      if (x instanceof NS) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))));
      };
      if (x instanceof ESS) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))));
      };
      if (x instanceof ES) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))))));
      };
      if (x instanceof DSS) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))))));
      };
      if (x instanceof DS) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))))))));
      };
      if (x instanceof N) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))))))));
      };
      if (x instanceof R) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))))))))));
      };
      if (x instanceof EM) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))))))))));
      };
      if (x instanceof Placeholder) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0))))))))));
      };
      throw new Error("Failed pattern match at ParserAST (line 319, column 1 - line 319, column 59): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return new P(x.value0.value0, x.value0.value1);
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return new NSS(x.value0.value0.value0, x.value0.value0.value1);
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
          return new NS(x.value0.value0.value0.value0, x.value0.value0.value0.value1);
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
          return new ESS(x.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value1);
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
          return new ES(x.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value1);
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
          return new DSS(x.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value1);
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))) {
          return new DS(x.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value1);
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))) {
          return new N(x.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value1);
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))))))) {
          return new R(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))))))) {
          return new EM(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0.value1);
      };
      if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr))))))))) {
          return new Placeholder(x.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
      };
      throw new Error("Failed pattern match at ParserAST (line 319, column 1 - line 319, column 59): " + [ x.constructor.name ]);
  });
  var showAstStackEl = new Data_Show.Show(function (v) {
      if (v instanceof Placeholder) {
          return "Placeholder " + Data_Show.show(Data_Show.showArray(showAstStackEl))(v.value0);
      };
      return Data_Generic_Rep_Show.genericShow(genAstStackEl)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "default";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "error";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "normal";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "specs";
      }))(Data_Show.showRecordFieldsNil)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "regex";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "specs";
      }))(Data_Show.showRecordFieldsNil)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "error";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "sync";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "specs";
      }))(Data_Show.showRecordFieldsNil)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "error";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "sync";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))))))))))(Data_Generic_Rep_Show.genericShowArgsArgument(showProgramLens)))(new Data_Symbol.IsSymbol(function () {
          return "P";
      })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "specs";
      }))(Data_Show.showRecordFieldsNil)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "regex";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt)))))))))))))(Data_Generic_Rep_Show.genericShowArgsArgument(showNormalSpecsLens)))(new Data_Symbol.IsSymbol(function () {
          return "NSS";
      })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "regex";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))))(Data_Generic_Rep_Show.genericShowArgsArgument(showNormalSpecLens)))(new Data_Symbol.IsSymbol(function () {
          return "NS";
      })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "specs";
      }))(Data_Show.showRecordFieldsNil)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "error";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "sync";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt)))))))))))))(Data_Generic_Rep_Show.genericShowArgsArgument(showErrorSpecsLens)))(new Data_Symbol.IsSymbol(function () {
          return "ESS";
      })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "error";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "sync";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))))(Data_Generic_Rep_Show.genericShowArgsArgument(showErrorSpecLens)))(new Data_Symbol.IsSymbol(function () {
          return "ES";
      })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "specs";
      }))(Data_Show.showRecordFieldsNil)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "error";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "sync";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt)))))))))))))(Data_Generic_Rep_Show.genericShowArgsArgument(showDefaultSpecsLens)))(new Data_Symbol.IsSymbol(function () {
          return "DSS";
      })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "error";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "sync";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))))(Data_Generic_Rep_Show.genericShowArgsArgument(showDefaultSpecLens)))(new Data_Symbol.IsSymbol(function () {
          return "DS";
      })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt)))))))(Data_Generic_Rep_Show.genericShowArgsArgument(showNameLens)))(new Data_Symbol.IsSymbol(function () {
          return "N";
      })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt)))))))(Data_Generic_Rep_Show.genericShowArgsArgument(showRegexLens)))(new Data_Symbol.IsSymbol(function () {
          return "R";
      })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsProduct(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "token";
      }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "column";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "lexeme";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "line";
      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "type";
      }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt)))))))(Data_Generic_Rep_Show.genericShowArgsArgument(showErrorMessageLens)))(new Data_Symbol.IsSymbol(function () {
          return "EM";
      })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showArray(showAstStackEl)))(new Data_Symbol.IsSymbol(function () {
          return "Placeholder";
      })))))))))))))(v);
  });
  var eqRegexLens = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genRegexLens)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments)));
  var ordRegexLens = new Data_Ord.Ord(function () {
      return eqRegexLens;
  }, Data_Generic_Rep_Ord.genericCompare(genRegexLens)(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments)));
  var eqProgramLens = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genProgramLens)(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))))));
  var ordProgramLens = new Data_Ord.Ord(function () {
      return eqProgramLens;
  }, Data_Generic_Rep_Ord.genericCompare(genProgramLens)(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments))(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments))))));
  var eqNormalSpecsLens = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genNormalSpecsLens)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments)));
  var ordNormalSpecsLens = new Data_Ord.Ord(function () {
      return eqNormalSpecsLens;
  }, Data_Generic_Rep_Ord.genericCompare(genNormalSpecsLens)(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments)));
  var eqNormalSpecLens = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genNormalSpecLens)(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))));
  var ordNormalSpecLens = new Data_Ord.Ord(function () {
      return eqNormalSpecLens;
  }, Data_Generic_Rep_Ord.genericCompare(genNormalSpecLens)(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments))(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments))));
  var eqNameLens = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genNameLens)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments)));
  var ordNameLens = new Data_Ord.Ord(function () {
      return eqNameLens;
  }, Data_Generic_Rep_Ord.genericCompare(genNameLens)(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments)));
  var eqErrorSpecsLens = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genErrorSpecsLens)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments)));
  var ordErrorSpecsLens = new Data_Ord.Ord(function () {
      return eqErrorSpecsLens;
  }, Data_Generic_Rep_Ord.genericCompare(genErrorSpecsLens)(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments)));
  var eqErrorSpecLens = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genErrorSpecLens)(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments)))));
  var ordErrorSpecLens = new Data_Ord.Ord(function () {
      return eqErrorSpecLens;
  }, Data_Generic_Rep_Ord.genericCompare(genErrorSpecLens)(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments))(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments))(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments)))));
  var eqErrorMessageLens = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genErrorMessageLens)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments)));
  var ordErrorMessageLens = new Data_Ord.Ord(function () {
      return eqErrorMessageLens;
  }, Data_Generic_Rep_Ord.genericCompare(genErrorMessageLens)(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments)));
  var eqDefaultSpecsLens = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genDefaultSpecsLens)(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments)));
  var ordDefaultSpecsLens = new Data_Ord.Ord(function () {
      return eqDefaultSpecsLens;
  }, Data_Generic_Rep_Ord.genericCompare(genDefaultSpecsLens)(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments)));
  var eqDefaultSpecLens = new Data_Eq.Eq(Data_Generic_Rep_Eq.genericEq(genDefaultSpecLens)(Data_Generic_Rep_Eq.genericEqSum(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))(Data_Generic_Rep_Eq.genericEqConstructor(Data_Generic_Rep_Eq.genericEqNoArguments))));
  var ordDefaultSpecLens = new Data_Ord.Ord(function () {
      return eqDefaultSpecLens;
  }, Data_Generic_Rep_Ord.genericCompare(genDefaultSpecLens)(Data_Generic_Rep_Ord.genericOrdSum(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments))(Data_Generic_Rep_Ord.genericOrdConstructor(Data_Generic_Rep_Ord.genericOrdNoArguments))));
  var enumRegexLens = new Data_Enum.Enum(function () {
      return ordRegexLens;
  }, Data_Generic_Rep_Enum.genericPred(genRegexLens)(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments)), Data_Generic_Rep_Enum.genericSucc(genRegexLens)(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments)));
  var enumProgramLens = new Data_Enum.Enum(function () {
      return ordProgramLens;
  }, Data_Generic_Rep_Enum.genericPred(genProgramLens)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))), Data_Generic_Rep_Enum.genericSucc(genProgramLens)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))));
  var enumNormalSpecsLens = new Data_Enum.Enum(function () {
      return ordNormalSpecsLens;
  }, Data_Generic_Rep_Enum.genericPred(genNormalSpecsLens)(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments)), Data_Generic_Rep_Enum.genericSucc(genNormalSpecsLens)(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments)));
  var enumNormalSpecLens = new Data_Enum.Enum(function () {
      return ordNormalSpecLens;
  }, Data_Generic_Rep_Enum.genericPred(genNormalSpecLens)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))), Data_Generic_Rep_Enum.genericSucc(genNormalSpecLens)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))));
  var enumNameLens = new Data_Enum.Enum(function () {
      return ordNameLens;
  }, Data_Generic_Rep_Enum.genericPred(genNameLens)(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments)), Data_Generic_Rep_Enum.genericSucc(genNameLens)(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments)));
  var enumErrorSpecsLens = new Data_Enum.Enum(function () {
      return ordErrorSpecsLens;
  }, Data_Generic_Rep_Enum.genericPred(genErrorSpecsLens)(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments)), Data_Generic_Rep_Enum.genericSucc(genErrorSpecsLens)(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments)));
  var enumErrorSpecLens = new Data_Enum.Enum(function () {
      return ordErrorSpecLens;
  }, Data_Generic_Rep_Enum.genericPred(genErrorSpecLens)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))), Data_Generic_Rep_Enum.genericSucc(genErrorSpecLens)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments)))));
  var enumErrorMessageLens = new Data_Enum.Enum(function () {
      return ordErrorMessageLens;
  }, Data_Generic_Rep_Enum.genericPred(genErrorMessageLens)(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments)), Data_Generic_Rep_Enum.genericSucc(genErrorMessageLens)(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments)));
  var enumDefaultSpecsLens = new Data_Enum.Enum(function () {
      return ordDefaultSpecsLens;
  }, Data_Generic_Rep_Enum.genericPred(genDefaultSpecsLens)(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments)), Data_Generic_Rep_Enum.genericSucc(genDefaultSpecsLens)(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments)));
  var enumDefaultSpecLens = new Data_Enum.Enum(function () {
      return ordDefaultSpecLens;
  }, Data_Generic_Rep_Enum.genericPred(genDefaultSpecLens)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))), Data_Generic_Rep_Enum.genericSucc(genDefaultSpecLens)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))));
  var parentAstStackElement = new Parent(function (v) {
      return function (v1) {
          if (v instanceof Placeholder) {
              var acc = function (p) {
                  return function (el) {
                      if (p instanceof Data_Either.Right) {
                          return mergeToParent(parentAstStackElement)(el)(p.value0);
                      };
                      return p;
                  };
              };
              return Data_Foldable.foldl(Data_Foldable.foldableArray)(acc)(new Data_Either.Right(v1))(v.value0);
          };
          if (v1 instanceof Placeholder) {
              return Data_Either.Right.create(new Placeholder(Data_Array.snoc(v1.value0)(v)));
          };
          if (v instanceof P) {
              return Data_Either.Left.create("Program " + (Data_Show.show(showAstStackEl)(v) + (" is supposed to be top. Could not merge into (" + (Data_Show.show(showAstStackEl)(v1) + ")"))));
          };
          if (v instanceof NSS) {
              var nextLens = maybeSucc(enumNormalSpecsLens)(v.value1);
              if (v1 instanceof P && v1.value1 instanceof NormalSpecs_) {
                  return Data_Either.Right.create(new P({
                      normal: new Data_Maybe.Just(v.value0),
                      error: v1.value0.error,
                      "default": v1["value0"]["default"]
                  }, maybeSucc(enumProgramLens)(NormalSpecs_.value)));
              };
              if (v1 instanceof NSS) {
                  return Data_Either.Right.create(new NSS({
                      specs: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.specs)(v.value0.specs)
                  }, maybeSucc(enumNormalSpecsLens)(ArrayNormalSpecs.value)));
              };
              return invalidParentError(showAstStackEl)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "specs";
              }))(Data_Show.showRecordFieldsNil)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "regex";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "token";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "column";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "lexeme";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "line";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "token";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "column";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "lexeme";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "line";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))))))(v1)(v.value0);
          };
          if (v instanceof NS) {
              if (v1 instanceof NSS) {
                  return Data_Either.Right.create(new NSS({
                      specs: Data_Array.snoc(v1.value0.specs)(v.value0)
                  }, maybeSucc(enumNormalSpecsLens)(ArrayNormalSpecs.value)));
              };
              return invalidParentError(showAstStackEl)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "regex";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "token";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "column";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "lexeme";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "line";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "token";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "column";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "lexeme";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "line";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt)))))))))(v1)(v.value0);
          };
          if (v instanceof ESS) {
              if (v1 instanceof P && v1.value1 instanceof ErrorSpecs_) {
                  return Data_Either.Right.create(P.create({
                      normal: v1.value0.normal,
                      error: new Data_Maybe.Just(v.value0),
                      "default": v1["value0"]["default"]
                  })(maybeSucc(enumProgramLens)(ErrorSpecs_.value)));
              };
              if (v1 instanceof P && v1.value1 instanceof NormalSpecs_) {
                  return Data_Either.Right.create(P.create({
                      normal: v1.value0.normal,
                      error: new Data_Maybe.Just(v.value0),
                      "default": v1["value0"]["default"]
                  })(maybeSucc(enumProgramLens)(ErrorSpecs_.value)));
              };
              if (v1 instanceof ESS) {
                  return Data_Either.Right.create(new ESS({
                      specs: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v1.value0.specs)(v.value0.specs)
                  }, maybeSucc(enumErrorSpecsLens)(ArrayErrorSpecs.value)));
              };
              return invalidParentError(showAstStackEl)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "specs";
              }))(Data_Show.showRecordFieldsNil)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "error";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "sync";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "token";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "column";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "lexeme";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "line";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "token";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "column";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "lexeme";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "line";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "token";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "column";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "lexeme";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "line";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))))))(v1)(v.value0);
          };
          if (v instanceof ES) {
              if (v1 instanceof ESS) {
                  return Data_Either.Right.create(new ESS({
                      specs: Data_Array.snoc(v1.value0.specs)(v.value0)
                  }, maybeSucc(enumErrorSpecsLens)(ArrayErrorSpecs.value)));
              };
              return invalidParentError(showAstStackEl)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "error";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "sync";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "token";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "column";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "lexeme";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "line";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "token";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "column";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "lexeme";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "line";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "token";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "column";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "lexeme";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "line";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt)))))))))(v1)(v.value0);
          };
          if (v instanceof DSS) {
              if (v1 instanceof P && v1.value1 instanceof DefaultSpecs_) {
                  return Data_Either.Right.create(new P({
                      normal: v1.value0.normal,
                      error: v1.value0.error,
                      "default": new Data_Maybe.Just(v.value0)
                  }, maybeSucc(enumProgramLens)(DefaultSpecs_.value)));
              };
              if (v1 instanceof P && v1.value1 instanceof ErrorSpecs_) {
                  return Data_Either.Right.create(new P({
                      normal: v1.value0.normal,
                      error: v1.value0.error,
                      "default": new Data_Maybe.Just(v.value0)
                  }, maybeSucc(enumProgramLens)(DefaultSpecs_.value)));
              };
              if (v1 instanceof P && v1.value1 instanceof NormalSpecs_) {
                  return Data_Either.Right.create(new P({
                      normal: v1.value0.normal,
                      error: v1.value0.error,
                      "default": new Data_Maybe.Just(v.value0)
                  }, maybeSucc(enumProgramLens)(DefaultSpecs_.value)));
              };
              return invalidParentError(showAstStackEl)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "specs";
              }))(Data_Show.showRecordFieldsNil)(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "error";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "sync";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "token";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "column";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "lexeme";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "line";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "token";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "column";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "lexeme";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "line";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))))))(v1)(v.value0);
          };
          if (v instanceof DS) {
              if (v1 instanceof DSS) {
                  return Data_Either.Right.create(new DSS({
                      specs: Data_Array.snoc(v1.value0.specs)(v.value0)
                  }, maybeSucc(enumDefaultSpecsLens)(ArrayDefaultSpecs.value)));
              };
              return invalidParentError(showAstStackEl)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "error";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "sync";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "token";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "column";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "lexeme";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "line";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "token";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "column";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "lexeme";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "line";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt)))))))))(v1)(v.value0);
          };
          if (v instanceof N) {
              if (v1 instanceof NS && v1.value1 instanceof NormalName) {
                  return Data_Either.Right.create(new NS({
                      name: new Data_Maybe.Just(v.value0),
                      regex: v1.value0.regex
                  }, maybeSucc(enumNormalSpecLens)(NormalName.value)));
              };
              if (v1 instanceof ES && v1.value1 instanceof ErrorName) {
                  return Data_Either.Right.create(new ES({
                      name: new Data_Maybe.Just(v.value0),
                      error: v1.value0.error,
                      sync: v1.value0.sync
                  }, maybeSucc(enumErrorSpecLens)(ErrorName.value)));
              };
              if (v1 instanceof ES && v1.value1 instanceof ErrorSync) {
                  return Data_Either.Right.create(new ES({
                      name: v1.value0.name,
                      error: v1.value0.error,
                      sync: new Data_Maybe.Just(v.value0)
                  }, maybeSucc(enumErrorSpecLens)(ErrorSync.value)));
              };
              if (v1 instanceof DS && v1.value1 instanceof DefaultSync) {
                  return Data_Either.Right.create(new DS({
                      error: v1.value0.error,
                      sync: new Data_Maybe.Just(v.value0)
                  }, maybeSucc(enumDefaultSpecLens)(DefaultSync.value)));
              };
              return invalidParentError(showAstStackEl)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "token";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "column";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "lexeme";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "line";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))(v1)(v.value0);
          };
          if (v instanceof R) {
              if (v1 instanceof NS && v1.value1 instanceof NormalRegex) {
                  return new Data_Either.Right(new NS({
                      name: v1.value0.name,
                      regex: new Data_Maybe.Just(v.value0)
                  }, maybeSucc(enumNormalSpecLens)(NormalRegex.value)));
              };
              if (v1 instanceof ES && v1.value1 instanceof ErrorSync) {
                  return new Data_Either.Right(new ES({
                      name: v1.value0.name,
                      error: v1.value0.error,
                      sync: new Data_Maybe.Just(v.value0)
                  }, maybeSucc(enumErrorSpecLens)(ErrorSync.value)));
              };
              if (v1 instanceof DS && v1.value1 instanceof DefaultSync) {
                  return new Data_Either.Right(new DS({
                      error: v1.value0.error,
                      sync: new Data_Maybe.Just(v.value0)
                  }, maybeSucc(enumDefaultSpecLens)(DefaultSync.value)));
              };
              return invalidParentError(showAstStackEl)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "token";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "column";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "lexeme";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "line";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))(v1)(v.value0);
          };
          if (v instanceof EM) {
              if (v1 instanceof ES && v1.value1 instanceof ErrorEM) {
                  return Data_Either.Right.create(new ES({
                      name: v1.value0.name,
                      error: new Data_Maybe.Just(v.value0),
                      sync: v1.value0.sync
                  }, maybeSucc(enumErrorSpecLens)(ErrorEM.value)));
              };
              if (v1 instanceof DS && v1.value1 instanceof DefaultMessage) {
                  return Data_Either.Right.create(new DS({
                      error: new Data_Maybe.Just(v.value0),
                      sync: v1.value0.sync
                  }, maybeSucc(enumDefaultSpecLens)(DefaultMessage.value)));
              };
              return invalidParentError(showAstStackEl)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "token";
              }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "column";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "lexeme";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "line";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "type";
              }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt))))))(v1)(v.value0);
          };
          throw new Error("Failed pattern match at ParserAST (line 337, column 1 - line 404, column 43): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var mergeAll = function ($copy_stack) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(stack) {
          var popped = popAstStack(stack);
          var v = topAstStack(stack);
          if (v instanceof Data_Maybe.Nothing) {
              $tco_done = true;
              return new Data_Either.Left("Stack was empty. Could not merge into a program");
          };
          if (v instanceof Data_Maybe.Just && v.value0 instanceof P) {
              $tco_done = true;
              return new Data_Either.Right(v.value0.value0);
          };
          if (v instanceof Data_Maybe.Just) {
              var v1 = topAstStack(popped);
              if (v1 instanceof Data_Maybe.Nothing) {
                  $tco_done = true;
                  return Data_Either.Left.create("Could not merge in mergeAll");
              };
              if (v1 instanceof Data_Maybe.Just) {
                  var v2 = mergeToParent(parentAstStackElement)(v.value0)(v1.value0);
                  if (v2 instanceof Data_Either.Right) {
                      $copy_stack = replaceAstStack(popped)(v2.value0);
                      return;
                  };
                  if (v2 instanceof Data_Either.Left) {
                      $tco_done = true;
                      return new Data_Either.Left(v2.value0);
                  };
                  throw new Error("Failed pattern match at ParserAST (line 40, column 32 - line 42, column 37): " + [ v2.constructor.name ]);
              };
              throw new Error("Failed pattern match at ParserAST (line 38, column 23 - line 42, column 37): " + [ v1.constructor.name ]);
          };
          throw new Error("Failed pattern match at ParserAST (line 35, column 9 - line 42, column 37): " + [ v.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_stack);
      };
      return $tco_result;
  };
  var extract = function (v) {
      if (sizeAstStack(v.buildStack) < 0) {
          return Data_Either.Left.create("AST Stack was empty: " + Data_Show.show(Data_List_Lazy_Types.showList(showAstStackEl))(v.buildStack));
      };
      if (Data_Boolean.otherwise) {
          var extracting = Control_Bind.bind(Data_Either.bindEither)(mergeAll(v.buildStack))(function (merged) {
              return toAst(merged);
          });
          if (extracting instanceof Data_Either.Right) {
              return new Data_Either.Right(extracting.value0);
          };
          if (extracting instanceof Data_Either.Left) {
              return Data_Either.Left.create("Build stack was: " + (Data_Show.show(Data_List_Lazy_Types.showList(showAstStackEl))(v.buildStack) + (", with extraction error: " + extracting.value0)));
          };
          throw new Error("Failed pattern match at ParserAST (line 28, column 13 - line 30, column 103): " + [ extracting.constructor.name ]);
      };
      throw new Error("Failed pattern match at ParserAST (line 20, column 1 - line 20, column 47): " + [ v.constructor.name ]);
  };
  var succAstStackEl = new Successor(function (v) {
      if (v instanceof P) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(P.create(v.value0))(Data_Enum.succ(enumProgramLens)(v.value1));
      };
      if (v instanceof NSS) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(NSS.create(v.value0))(Data_Enum.succ(enumNormalSpecsLens)(v.value1));
      };
      if (v instanceof NS) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(NS.create(v.value0))(Data_Enum.succ(enumNormalSpecLens)(v.value1));
      };
      if (v instanceof ESS) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(ESS.create(v.value0))(Data_Enum.succ(enumErrorSpecsLens)(v.value1));
      };
      if (v instanceof ES) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(ES.create(v.value0))(Data_Enum.succ(enumErrorSpecLens)(v.value1));
      };
      if (v instanceof DSS) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(DSS.create(v.value0))(Data_Enum.succ(enumDefaultSpecsLens)(v.value1));
      };
      if (v instanceof DS) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(DS.create(v.value0))(Data_Enum.succ(enumDefaultSpecLens)(v.value1));
      };
      if (v instanceof N) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(N.create(v.value0))(Data_Enum.succ(enumNameLens)(v.value1));
      };
      if (v instanceof R) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(R.create(v.value0))(Data_Enum.succ(enumRegexLens)(v.value1));
      };
      if (v instanceof EM) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(EM.create(v.value0))(Data_Enum.succ(enumErrorMessageLens)(v.value1));
      };
      if (v instanceof Placeholder) {
          return Data_Maybe.Just.create(new Placeholder(v.value0));
      };
      throw new Error("Failed pattern match at ParserAST (line 324, column 1 - line 335, column 57): " + [ v.constructor.name ]);
  });
  var emptyAstStack = Data_List_Lazy_Types.nil;
  var emptyBuildState = {
      buildStack: emptyAstStack
  };
  var buildTree = function (v) {
      return function (v1) {
          if (v1 instanceof Next) {
              var popped = popAstStack(v.buildStack);
              var v2 = topAstStack(v.buildStack);
              if (v2 instanceof Data_Maybe.Nothing) {
                  return Data_Either.Left.create("Invalid request to go to next when there was nothing in stack");
              };
              if (v2 instanceof Data_Maybe.Just) {
                  var v3 = successor(succAstStackEl)(v2.value0);
                  if (v3 instanceof Data_Maybe.Just) {
                      return Data_Either.Right.create(replaceState(v)(v3.value0));
                  };
                  if (v3 instanceof Data_Maybe.Nothing) {
                      return new Data_Either.Right(v);
                  };
                  throw new Error("Failed pattern match at ParserAST (line 460, column 29 - line 462, column 39): " + [ v3.constructor.name ]);
              };
              throw new Error("Failed pattern match at ParserAST (line 458, column 9 - line 462, column 39): " + [ v2.constructor.name ]);
          };
          if (v1 instanceof Up) {
              var popped = popAstStack(v.buildStack);
              var v2 = topAstStack(v.buildStack);
              if (v2 instanceof Data_Maybe.Nothing) {
                  return Data_Either.Left.create("Invalid request to go up when there was nothing in the stack");
              };
              if (v2 instanceof Data_Maybe.Just) {
                  var v3 = topAstStack(popped);
                  if (v3 instanceof Data_Maybe.Nothing) {
                      return new Data_Either.Right(v);
                  };
                  if (v3 instanceof Data_Maybe.Just) {
                      var v4 = mergeToParent(parentAstStackElement)(v2.value0)(v3.value0);
                      if (v4 instanceof Data_Either.Right) {
                          return Data_Either.Right.create({
                              buildStack: replaceAstStack(popped)(v4.value0)
                          });
                      };
                      if (v4 instanceof Data_Either.Left) {
                          return new Data_Either.Left(v4.value0);
                      };
                      throw new Error("Failed pattern match at ParserAST (line 470, column 32 - line 474, column 41): " + [ v4.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at ParserAST (line 468, column 29 - line 474, column 41): " + [ v3.constructor.name ]);
              };
              throw new Error("Failed pattern match at ParserAST (line 466, column 9 - line 474, column 41): " + [ v2.constructor.name ]);
          };
          if (v1 instanceof Match) {
              var v2 = topAstStack(v.buildStack);
              if (v2 instanceof Data_Maybe.Nothing) {
                  return Data_Either.Left.create("Could not add token (" + (Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "column";
                  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "lexeme";
                  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "line";
                  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "type";
                  }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt)))(v1.value0) + "). Stack was empty"));
              };
              if (v2 instanceof Data_Maybe.Just) {
                  if (v2.value0 instanceof N) {
                      return Data_Either.Right.create(replaceState(v)(new N({
                          token: new Data_Maybe.Just(v1.value0)
                      }, v2.value0.value1)));
                  };
                  if (v2.value0 instanceof R) {
                      return Data_Either.Right.create(replaceState(v)(new R({
                          token: new Data_Maybe.Just(v1.value0)
                      }, v2.value0.value1)));
                  };
                  if (v2.value0 instanceof EM) {
                      return Data_Either.Right.create(replaceState(v)(new EM({
                          token: new Data_Maybe.Just(v1.value0)
                      }, v2.value0.value1)));
                  };
                  var $427 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(ParserTypes.validForAst(ParserTypes.validAstTokenType))(v1.value0.type);
                  if ($427) {
                      return new Data_Either.Right(v);
                  };
                  return Data_Either.Left.create("Could not add token " + (Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "column";
                  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "lexeme";
                  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "line";
                  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                      return "type";
                  }))(Data_Show.showRecordFieldsNil)(ParserTypes.showTokenType))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showInt)))(v1.value0) + (", current node (" + (Data_Show.show(showAstStackEl)(v2.value0) + ") does not accept tokens"))));
              };
              throw new Error("Failed pattern match at ParserAST (line 477, column 5 - line 485, column 129): " + [ v2.constructor.name ]);
          };
          if (v1 instanceof AddDerivation) {
              var pushState = function (v2) {
                  return function (el) {
                      return {
                          buildStack: pushAstStack(el)(v2.buildStack)
                      };
                  };
              };
              if (v1.value0 instanceof ParserTypes.DProgram) {
                  return Data_Either.Right.create(pushState(v)(new P({
                      normal: Data_Maybe.Nothing.value,
                      error: Data_Maybe.Nothing.value,
                      "default": Data_Maybe.Nothing.value
                  }, NormalSpecs_.value)));
              };
              if (v1.value0 instanceof ParserTypes.DNormalSpecs) {
                  return Data_Either.Right.create(pushState(v)(new NSS({
                      specs: [  ]
                  }, ArrayNormalSpecs.value)));
              };
              if (v1.value0 instanceof ParserTypes.DNormalSpec) {
                  return Data_Either.Right.create(pushState(v)(new NS({
                      name: Data_Maybe.Nothing.value,
                      regex: Data_Maybe.Nothing.value
                  }, NormalName.value)));
              };
              if (v1.value0 instanceof ParserTypes.DErrorSpecs) {
                  return Data_Either.Right.create(pushState(v)(new ESS({
                      specs: [  ]
                  }, ArrayErrorSpecs.value)));
              };
              if (v1.value0 instanceof ParserTypes.DErrorSpec) {
                  return Data_Either.Right.create(pushState(v)(new ES({
                      name: Data_Maybe.Nothing.value,
                      error: Data_Maybe.Nothing.value,
                      sync: Data_Maybe.Nothing.value
                  }, ErrorName.value)));
              };
              if (v1.value0 instanceof ParserTypes.DDefaultSpecs) {
                  return Data_Either.Right.create(pushState(v)(new DSS({
                      specs: [  ]
                  }, ArrayDefaultSpecs.value)));
              };
              if (v1.value0 instanceof ParserTypes.DDefaultError) {
                  return Data_Either.Right.create(pushState(v)(new DS({
                      error: Data_Maybe.Nothing.value,
                      sync: Data_Maybe.Nothing.value
                  }, DefaultMessage.value)));
              };
              if (v1.value0 instanceof ParserTypes.DName) {
                  return Data_Either.Right.create(pushState(v)(new N({
                      token: Data_Maybe.Nothing.value
                  }, Name_.value)));
              };
              if (v1.value0 instanceof ParserTypes.DRegex) {
                  return Data_Either.Right.create(pushState(v)(new R({
                      token: Data_Maybe.Nothing.value
                  }, Regex_.value)));
              };
              if (v1.value0 instanceof ParserTypes.DErrorMessage) {
                  return Data_Either.Right.create(pushState(v)(new EM({
                      token: Data_Maybe.Nothing.value
                  }, ErrorMessage_.value)));
              };
              var $435 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(ParserTypes.validForAst(ParserTypes.validAstDerivType))(v1.value0);
              if ($435) {
                  return Data_Either.Right.create(pushState(v)(new Placeholder([  ])));
              };
              return Data_Either.Left.create("Tried to add derivation (" + (Data_Show.show(ParserTypes.showDerivationType)(v1.value0) + ") which was not valid for ast"));
          };
          throw new Error("Failed pattern match at ParserAST (line 454, column 1 - line 454, column 76): " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  exports["extract"] = extract;
  exports["emptyBuildState"] = emptyBuildState;
  exports["Next"] = Next;
  exports["Up"] = Up;
  exports["Match"] = Match;
  exports["AddDerivation"] = AddDerivation;
  exports["buildTree"] = buildTree;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Parser"] = $PS["Parser"] || {};
  var exports = $PS["Parser"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Array_NonEmpty_Internal = $PS["Data.Array.NonEmpty.Internal"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Lazy = $PS["Data.List.Lazy"];
  var Data_List_Lazy_Types = $PS["Data.List.Lazy.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var ParserAST = $PS["ParserAST"];
  var ParserTypes = $PS["ParserTypes"];                
  var STUCK = (function () {
      function STUCK() {

      };
      STUCK.value = new STUCK();
      return STUCK;
  })();
  var Replace = (function () {
      function Replace(value0) {
          this.value0 = value0;
      };
      Replace.create = function (value0) {
          return new Replace(value0);
      };
      return Replace;
  })();
  var Discard = (function () {
      function Discard() {

      };
      Discard.value = new Discard();
      return Discard;
  })();
  var topStack = Data_List_Lazy.head;
  var tokenTypeToIndex = function (t) {
      if (t instanceof ParserTypes.NormalHeader) {
          return 0;
      };
      if (t instanceof ParserTypes.ErrorHeader) {
          return 1;
      };
      if (t instanceof ParserTypes.DefaultHeader) {
          return 2;
      };
      if (t instanceof ParserTypes.Regex) {
          return 3;
      };
      if (t instanceof ParserTypes.ErrorMessage) {
          return 4;
      };
      if (t instanceof ParserTypes.Terminator) {
          return 5;
      };
      if (t instanceof ParserTypes.Name) {
          return 6;
      };
      if (t instanceof ParserTypes.FAIL) {
          return 7;
      };
      if (t instanceof ParserTypes.Default) {
          return 8;
      };
      if (t instanceof ParserTypes.EOF) {
          return 9;
      };
      throw new Error("Failed pattern match at Parser (line 199, column 5 - line 209, column 17): " + [ t.constructor.name ]);
  };
  var toString = function (err) {
      return Data_Show.show(Data_Show.showInt)(err.line) + (":" + (Data_Show.show(Data_Show.showInt)(err.column) + (": " + err.message)));
  };
  var sizeStack = Data_List_Lazy.length;
  var pushStack = Data_List_Lazy_Types.cons;
  var popStack = function (s) {
      var v = Data_List_Lazy.tail(s);
      if (v instanceof Data_Maybe.Nothing) {
          return s;
      };
      if (v instanceof Data_Maybe.Just) {
          return v.value0;
      };
      throw new Error("Failed pattern match at Parser (line 392, column 14 - line 394, column 22): " + [ v.constructor.name ]);
  };
  var isTerminal = function (d) {
      if (d instanceof ParserTypes.DNormalHeader) {
          return true;
      };
      if (d instanceof ParserTypes.DErrorHeader) {
          return true;
      };
      if (d instanceof ParserTypes.DDefaultHeader) {
          return true;
      };
      if (d instanceof ParserTypes.DRegex) {
          return true;
      };
      if (d instanceof ParserTypes.DErrorMessage) {
          return true;
      };
      if (d instanceof ParserTypes.DTerminator) {
          return true;
      };
      if (d instanceof ParserTypes.DName) {
          return true;
      };
      if (d instanceof ParserTypes.DFAIL) {
          return true;
      };
      if (d instanceof ParserTypes.DDefault) {
          return true;
      };
      if (d instanceof ParserTypes.DEof) {
          return true;
      };
      return false;
  };
  var eof = {
      type: ParserTypes.EOF.value,
      lexeme: "",
      line: -1 | 0,
      column: -1 | 0
  };
  var emptyStack = Data_List_Lazy_Types.nil;
  var derivTypeToIndex = function (d) {
      if (d instanceof ParserTypes.DProgram) {
          return 0;
      };
      if (d instanceof ParserTypes.DNormalTokens) {
          return 1;
      };
      if (d instanceof ParserTypes.DErrorTokens) {
          return 2;
      };
      if (d instanceof ParserTypes.DDefaultTokens) {
          return 3;
      };
      if (d instanceof ParserTypes.DNormalSpecs) {
          return 4;
      };
      if (d instanceof ParserTypes.DNormalSpec) {
          return 5;
      };
      if (d instanceof ParserTypes.DErrorSpecs) {
          return 6;
      };
      if (d instanceof ParserTypes.DErrorSpec) {
          return 7;
      };
      if (d instanceof ParserTypes.DDefaultSpecs) {
          return 8;
      };
      if (d instanceof ParserTypes.DDefaultError) {
          return 9;
      };
      if (d instanceof ParserTypes.DOptionalSync) {
          return 10;
      };
      if (d instanceof ParserTypes.DNormalHeader) {
          return 11;
      };
      if (d instanceof ParserTypes.DErrorHeader) {
          return 12;
      };
      if (d instanceof ParserTypes.DDefaultHeader) {
          return 13;
      };
      if (d instanceof ParserTypes.DRegex) {
          return 14;
      };
      if (d instanceof ParserTypes.DErrorMessage) {
          return 15;
      };
      if (d instanceof ParserTypes.DTerminator) {
          return 16;
      };
      if (d instanceof ParserTypes.DName) {
          return 17;
      };
      if (d instanceof ParserTypes.DFAIL) {
          return 18;
      };
      if (d instanceof ParserTypes.DDefault) {
          return 19;
      };
      if (d instanceof ParserTypes.DEof) {
          return 20;
      };
      if (d instanceof ParserTypes.DoneWithNode) {
          return -1 | 0;
      };
      throw new Error("Failed pattern match at Parser (line 213, column 5 - line 236, column 34): " + [ d.constructor.name ]);
  };
  var getEntry = function (dType) {
      return function (tType) {
          var table = (function () {
              var program = (function () {
                  var entry = Replace.create(Data_Array_NonEmpty.appendArray(Data_Array_NonEmpty.singleton(ParserTypes.DNormalTokens.value))([ ParserTypes.DErrorTokens.value, ParserTypes.DDefaultTokens.value ]));
                  var tokenEntries = [ new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.NormalHeader.value), entry) ];
                  return Data_Map_Internal.fromFoldable(Data_Ord.ordInt)(Data_Foldable.foldableArray)(tokenEntries);
              })();
              var optionalSync = (function () {
                  var n = Replace.create(Data_Array_NonEmpty.singleton(ParserTypes.DName.value));
                  var tokenEntries = [ new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.Terminator.value), Discard.value), new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.Name.value), n) ];
                  return Data_Map_Internal.fromFoldable(Data_Ord.ordInt)(Data_Foldable.foldableArray)(tokenEntries);
              })();
              var normalTokens = (function () {
                  var entry = Replace.create(Data_Array_NonEmpty.appendArray(Data_Array_NonEmpty.singleton(ParserTypes.DNormalHeader.value))([ ParserTypes.DNormalSpecs.value ]));
                  var tokenEntries = [ new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.NormalHeader.value), entry) ];
                  return Data_Map_Internal.fromFoldable(Data_Ord.ordInt)(Data_Foldable.foldableArray)(tokenEntries);
              })();
              var normalSpecs = (function () {
                  var n = Replace.create(Data_Array_NonEmpty.appendArray(Data_Array_NonEmpty.singleton(ParserTypes.DNormalSpec.value))([ ParserTypes.DNormalSpecs.value ]));
                  var tokenEntries = [ new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.EOF.value), Discard.value), new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.ErrorHeader.value), Discard.value), new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.DefaultHeader.value), Discard.value), new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.Name.value), n) ];
                  return Data_Map_Internal.fromFoldable(Data_Ord.ordInt)(Data_Foldable.foldableArray)(tokenEntries);
              })();
              var normalSpec = (function () {
                  var n = Replace.create(Data_Array_NonEmpty.appendArray(Data_Array_NonEmpty.singleton(ParserTypes.DName.value))([ ParserTypes.DRegex.value, ParserTypes.DTerminator.value ]));
                  var tokenEntries = [ new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.Name.value), n) ];
                  return Data_Map_Internal.fromFoldable(Data_Ord.ordInt)(Data_Foldable.foldableArray)(tokenEntries);
              })();
              var errorTokens = (function () {
                  var eh = Replace.create(Data_Array_NonEmpty.appendArray(Data_Array_NonEmpty.singleton(ParserTypes.DErrorHeader.value))([ ParserTypes.DErrorSpecs.value ]));
                  var tokenEntries = [ new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.EOF.value), Discard.value), new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.DefaultHeader.value), Discard.value), new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.ErrorHeader.value), eh) ];
                  return Data_Map_Internal.fromFoldable(Data_Ord.ordInt)(Data_Foldable.foldableArray)(tokenEntries);
              })();
              var errorSpecs = (function () {
                  var n = Replace.create(Data_Array_NonEmpty.appendArray(Data_Array_NonEmpty.singleton(ParserTypes.DErrorSpec.value))([ ParserTypes.DErrorSpecs.value ]));
                  var tokenEntries = [ new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.EOF.value), Discard.value), new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.DefaultHeader.value), Discard.value), new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.Name.value), n) ];
                  return Data_Map_Internal.fromFoldable(Data_Ord.ordInt)(Data_Foldable.foldableArray)(tokenEntries);
              })();
              var errorSpec = (function () {
                  var n = Replace.create(Data_Array_NonEmpty.appendArray(Data_Array_NonEmpty.singleton(ParserTypes.DName.value))([ ParserTypes.DErrorMessage.value, ParserTypes.DOptionalSync.value, ParserTypes.DTerminator.value ]));
                  var tokenEntries = [ new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.Name.value), n) ];
                  return Data_Map_Internal.fromFoldable(Data_Ord.ordInt)(Data_Foldable.foldableArray)(tokenEntries);
              })();
              var defaultTokens = (function () {
                  var dh = Replace.create(Data_Array_NonEmpty.appendArray(Data_Array_NonEmpty.singleton(ParserTypes.DDefaultHeader.value))([ ParserTypes.DDefaultSpecs.value ]));
                  var tokenEntries = [ new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.EOF.value), Discard.value), new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.DefaultHeader.value), dh) ];
                  return Data_Map_Internal.fromFoldable(Data_Ord.ordInt)(Data_Foldable.foldableArray)(tokenEntries);
              })();
              var defaultSpecs = (function () {
                  var de = Replace.create(Data_Array_NonEmpty.singleton(ParserTypes.DDefaultError.value));
                  var tokenEntries = [ new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.EOF.value), Discard.value), new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.Default.value), de) ];
                  return Data_Map_Internal.fromFoldable(Data_Ord.ordInt)(Data_Foldable.foldableArray)(tokenEntries);
              })();
              var defaultError = (function () {
                  var d = Replace.create(Data_Array_NonEmpty.appendArray(Data_Array_NonEmpty.singleton(ParserTypes.DDefault.value))([ ParserTypes.DErrorMessage.value, ParserTypes.DOptionalSync.value, ParserTypes.DTerminator.value ]));
                  var tokenEntries = [ new Data_Tuple.Tuple(tokenTypeToIndex(ParserTypes.Default.value), d) ];
                  return Data_Map_Internal.fromFoldable(Data_Ord.ordInt)(Data_Foldable.foldableArray)(tokenEntries);
              })();
              var deriveEntries = [ new Data_Tuple.Tuple(derivTypeToIndex(ParserTypes.DProgram.value), program), new Data_Tuple.Tuple(derivTypeToIndex(ParserTypes.DNormalTokens.value), normalTokens), new Data_Tuple.Tuple(derivTypeToIndex(ParserTypes.DErrorTokens.value), errorTokens), new Data_Tuple.Tuple(derivTypeToIndex(ParserTypes.DDefaultTokens.value), defaultTokens), new Data_Tuple.Tuple(derivTypeToIndex(ParserTypes.DNormalSpecs.value), normalSpecs), new Data_Tuple.Tuple(derivTypeToIndex(ParserTypes.DNormalSpec.value), normalSpec), new Data_Tuple.Tuple(derivTypeToIndex(ParserTypes.DErrorSpecs.value), errorSpecs), new Data_Tuple.Tuple(derivTypeToIndex(ParserTypes.DErrorSpec.value), errorSpec), new Data_Tuple.Tuple(derivTypeToIndex(ParserTypes.DDefaultSpecs.value), defaultSpecs), new Data_Tuple.Tuple(derivTypeToIndex(ParserTypes.DDefaultError.value), defaultError), new Data_Tuple.Tuple(derivTypeToIndex(ParserTypes.DOptionalSync.value), optionalSync) ];
              return Data_Map_Internal.fromFoldable(Data_Ord.ordInt)(Data_Foldable.foldableArray)(deriveEntries);
          })();
          var entry = Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(Data_Ord.ordInt)(derivTypeToIndex(dType))(table))(function (dRow) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(Data_Ord.ordInt)(tokenTypeToIndex(tType))(dRow))(function (e) {
                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(e);
              });
          });
          if (entry instanceof Data_Maybe.Nothing) {
              return STUCK.value;
          };
          if (entry instanceof Data_Maybe.Just) {
              return entry.value0;
          };
          throw new Error("Failed pattern match at Parser (line 260, column 9 - line 262, column 24): " + [ entry.constructor.name ]);
      };
  };
  var doParse = function (ts) {
      var processToken = function (token) {
          return function (state) {
              var result = (function () {
                  var popped = popStack(state.stack);
                  var l = topStack(state.stack);
                  if (l instanceof Data_Maybe.Nothing) {
                      return Data_Either.Left.create("No leftmost found on stack on terminal " + Data_Show.show(ParserTypes.showTokenType)(token.type));
                  };
                  if (l instanceof Data_Maybe.Just) {
                      if (l.value0 instanceof ParserTypes.DoneWithNode) {
                          return Control_Bind.bind(Data_Either.bindEither)(ParserAST.buildTree(state.astBuildState)(ParserAST.Up.value))(function (newBuildState) {
                              var newState = {
                                  "continue": state["continue"],
                                  stack: popped,
                                  astBuildState: newBuildState,
                                  result: state.result
                              };
                              return processToken(token)(newState);
                          });
                      };
                      var push = function (de) {
                          return function (st) {
                              return pushStack(de)(st);
                          };
                      };
                      var $19 = isTerminal(l.value0);
                      if ($19) {
                          var $20 = ParserTypes.equals(token.type)(l.value0);
                          if ($20) {
                              return Control_Bind.bind(Data_Either.bindEither)(ParserAST.buildTree(state.astBuildState)(new ParserAST.AddDerivation(l.value0)))(function (withDeriv) {
                                  return Control_Bind.bind(Data_Either.bindEither)(ParserAST.buildTree(withDeriv)(new ParserAST.Match(token)))(function (withMatch) {
                                      return Control_Bind.bind(Data_Either.bindEither)(ParserAST.buildTree(withMatch)(ParserAST.Up.value))(function (newBuildState) {
                                          return Control_Applicative.pure(Data_Either.applicativeEither)({
                                              stack: popped,
                                              astBuildState: newBuildState,
                                              "continue": state["continue"],
                                              result: state.result
                                          });
                                      });
                                  });
                              });
                          };
                          return Data_Either.Left.create("Terminal " + (Data_Show.show(ParserTypes.showTokenType)(token.type) + (" did not match " + Data_Show.show(ParserTypes.showDerivationType)(l.value0))));
                      };
                      var entry = getEntry(l.value0)(token.type);
                      if (entry instanceof STUCK) {
                          return Data_Either.Left.create("Parser got stuck here looking at stack: " + (Data_Show.show(Data_List_Lazy_Types.showList(ParserTypes.showDerivationType))(state.stack) + (" and token " + Data_Show.show(ParserTypes.showTokenType)(token.type))));
                      };
                      if (entry instanceof Replace) {
                          return Control_Bind.bind(Data_Either.bindEither)(ParserAST.buildTree(state.astBuildState)(new ParserAST.AddDerivation(l.value0)))(function (newBuildState) {
                              var replaced = Data_Foldable.foldr(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(push)(pushStack(ParserTypes.DoneWithNode.value)(popped))(entry.value0);
                              var newState = {
                                  "continue": state["continue"],
                                  stack: replaced,
                                  astBuildState: newBuildState,
                                  result: state.result
                              };
                              return processToken(token)(newState);
                          });
                      };
                      if (entry instanceof Discard) {
                          return Control_Bind.bind(Data_Either.bindEither)(ParserAST.buildTree(state.astBuildState)(ParserAST.Next.value))(function (newBuildState) {
                              var newState = {
                                  "continue": state["continue"],
                                  stack: popped,
                                  astBuildState: newBuildState,
                                  result: state.result
                              };
                              return processToken(token)(newState);
                          });
                      };
                      throw new Error("Failed pattern match at Parser (line 171, column 41 - line 183, column 76): " + [ entry.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Parser (line 151, column 21 - line 186, column 69): " + [ l.constructor.name ]);
              })();
              return result;
          };
      };
      var makeError = function (t) {
          return function (s) {
              return {
                  message: s,
                  line: t.line,
                  column: t.column
              };
          };
      };
      var acc = function (state) {
          return function (t) {
              var nextState = processToken(t)(state);
              if (state["continue"]) {
                  if (nextState instanceof Data_Either.Left) {
                      return {
                          "continue": false,
                          stack: state.stack,
                          astBuildState: state.astBuildState,
                          result: {
                              tree: state.result.tree,
                              success: state.result.success,
                              errors: Data_Array.cons(makeError(t)(nextState.value0))(state.result.errors),
                              diagnosticError: state.result.diagnosticError
                          }
                      };
                  };
                  if (nextState instanceof Data_Either.Right) {
                      return {
                          "continue": true,
                          stack: nextState.value0.stack,
                          astBuildState: nextState.value0.astBuildState,
                          result: nextState.value0.result
                      };
                  };
                  throw new Error("Failed pattern match at Parser (line 124, column 21 - line 131, column 34): " + [ nextState.constructor.name ]);
              };
              return state;
          };
      };
      var initialParseState = {
          "continue": true,
          stack: pushStack(ParserTypes.DProgram.value)(pushStack(ParserTypes.DEof.value)(emptyStack)),
          astBuildState: ParserAST.emptyBuildState,
          result: {
              tree: Data_Maybe.Nothing.value,
              success: false,
              errors: [  ],
              diagnosticError: ""
          }
      };
      var state = Data_Foldable.foldl(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(acc)(initialParseState)(ts);
      var buildResults = ParserAST.extract(state.astBuildState);
      var $28 = sizeStack(state.stack) === 0;
      if ($28) {
          if (buildResults instanceof Data_Either.Left) {
              return {
                  tree: state.result.tree,
                  success: true,
                  errors: state.result.errors,
                  diagnosticError: "Stack was " + (Data_Show.show(Data_List_Lazy_Types.showList(ParserTypes.showDerivationType))(state.stack) + (" when build failed: " + buildResults.value0))
              };
          };
          if (buildResults instanceof Data_Either.Right) {
              return {
                  tree: Data_Maybe.Just.create(buildResults.value0),
                  success: true,
                  errors: state.result.errors,
                  diagnosticError: state.result.diagnosticError
              };
          };
          throw new Error("Failed pattern match at Parser (line 100, column 14 - line 108, column 22): " + [ buildResults.constructor.name ]);
      };
      return {
          tree: state.result.tree,
          success: false,
          errors: state.result.errors,
          diagnosticError: "Stack was " + Data_Show.show(Data_List_Lazy_Types.showList(ParserTypes.showDerivationType))(state.stack)
      };
  };
  var parse = function (arr) {
      var result = doParse(arr);
      return result;
  };
  exports["parse"] = parse;
  exports["toString"] = toString;
  exports["eof"] = eof;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["FirstPass"] = $PS["FirstPass"] || {};
  var exports = $PS["FirstPass"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unit = $PS["Data.Unit"];
  var Types = $PS["Types"];                
  var nameExists = function (tok) {
      return function (arr) {
          var sameTok = function (t1) {
              return function (t2) {
                  return Data_Eq.eq(Types.eqTokenType)(t1.type)(t2.type) && t1.lexeme === t2.lexeme;
              };
          };
          var v = Data_Foldable.find(Data_Foldable.foldableArray)(sameTok(tok))(arr);
          if (v instanceof Data_Maybe.Nothing) {
              return false;
          };
          return true;
      };
  };
  var generateName = function (v) {
      if (v instanceof Data_Maybe.Just && v.value0 instanceof Types.Name) {
          return new Data_Maybe.Just(v.value0.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var firstPass = function (ast) {
      var eHead = Data_Function.flip(Data_Array.index);
      if (ast instanceof Types.Program) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_Functor.functorArray)(firstPass)(ast.value0)))(function () {
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
          });
      };
      if (ast instanceof Types.NormalSpecs) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_Functor.functorArray)(firstPass)(ast.value0)))(function () {
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
          });
      };
      if (ast instanceof Types.ErrorSpecs) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_Functor.functorArray)(firstPass)(ast.value0)))(function () {
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
          });
      };
      if (ast instanceof Types.DefaultSpecs) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_Functor.functorArray)(firstPass)(ast.value0)))(function () {
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
          });
      };
      if (ast instanceof Types.NormalSpec) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(function (ctx) {
              var v = generateName(Data_Array.head(ast.value0));
              if (v instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
              };
              if (v instanceof Data_Maybe.Just) {
                  var $16 = !nameExists(v.value0)(ctx.tokenTypes);
                  if ($16) {
                      return Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))((function () {
                          var $17 = {};
                          for (var $18 in ctx) {
                              if ({}.hasOwnProperty.call(ctx, $18)) {
                                  $17[$18] = ctx[$18];
                              };
                          };
                          $17.tokenTypes = Data_Array.cons(v.value0)(ctx.tokenTypes);
                          return $17;
                      })());
                  };
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at FirstPass (line 33, column 13 - line 38, column 35): " + [ v.constructor.name ]);
          });
      };
      if (ast instanceof Types.ErrorSpec) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(function (ctx) {
              var v = generateName(Data_Array.head(ast.value0));
              if (v instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
              };
              if (v instanceof Data_Maybe.Just) {
                  var $23 = !nameExists(v.value0)(ctx.errorTypes);
                  if ($23) {
                      return Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))((function () {
                          var $24 = {};
                          for (var $25 in ctx) {
                              if ({}.hasOwnProperty.call(ctx, $25)) {
                                  $24[$25] = ctx[$25];
                              };
                          };
                          $24.errorTypes = Data_Array.cons(v.value0)(ctx.errorTypes);
                          return $24;
                      })());
                  };
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at FirstPass (line 42, column 13 - line 47, column 35): " + [ v.constructor.name ]);
          });
      };
      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
  };
  exports["firstPass"] = firstPass;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["TypeChecker"] = $PS["TypeChecker"] || {};
  var exports = $PS["TypeChecker"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State = $PS["Control.Monad.State"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Traversable = $PS["Data.Traversable"];
  var FirstPass = $PS["FirstPass"];
  var Types = $PS["Types"];                
  var tokenAlreadyExists = function (tok) {
      return function (arr) {
          var sameTok = function (t1) {
              return function (t2) {
                  return Data_Eq.eq(Types.eqTokenType)(t1.type)(t2.type) && (t1.lexeme === t2.lexeme && (t1.column !== t2.column || t1.line !== t2.line));
              };
          };
          var v = Data_Foldable.find(Data_Foldable.foldableArray)(sameTok(tok))(arr);
          if (v instanceof Data_Maybe.Nothing) {
              return false;
          };
          return true;
      };
  };
  var noErrors = function (results) {
      return Data_Array["null"](results.errors);
  };
  var initialContext = {
      tokenTypes: [  ],
      errorTypes: [  ]
  };
  var errorTokenDefined = function (tok) {
      return function (arr) {
          var sameTok = function (t1) {
              return function (t2) {
                  return Data_Eq.eq(Types.eqTokenType)(t1.type)(t2.type) && t1.lexeme === t2.lexeme;
              };
          };
          var v = Data_Foldable.find(Data_Foldable.foldableArray)(sameTok(tok))(arr);
          if (v instanceof Data_Maybe.Nothing) {
              return false;
          };
          return true;
      };
  };
  var errorAlreadyExists = function (tok) {
      return function (arr) {
          var sameTok = function (t1) {
              return function (t2) {
                  return Data_Eq.eq(Types.eqTokenType)(t1.type)(t2.type) && (t1.lexeme === t2.lexeme && (t1.column !== t2.column || t1.line !== t2.line));
              };
          };
          var v = Data_Foldable.find(Data_Foldable.foldableArray)(sameTok(tok))(arr);
          if (v instanceof Data_Maybe.Nothing) {
              return false;
          };
          return true;
      };
  };
  var emptyResults = {
      errors: [  ]
  };
  var checkUniqueToken = function (v) {
      if (v instanceof Types.Name) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(function (ctx) {
              var $12 = tokenAlreadyExists(v.value0)(ctx.tokenTypes);
              if ($12) {
                  var error = v.value0.lexeme + " has already been used";
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))({
                      errors: [ error ]
                  });
              };
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(emptyResults);
          });
      };
      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(emptyResults);
  };
  var checkUniqueErrors = function (v) {
      if (v instanceof Types.Name) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(function (ctx) {
              var $15 = errorAlreadyExists(v.value0)(ctx.errorTypes);
              if ($15) {
                  var error = v.value0.lexeme + " has already been used to define an error";
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))({
                      errors: [ error ]
                  });
              };
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(emptyResults);
          });
      };
      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(emptyResults);
  };
  var checkReserved = function (v) {
      if (v instanceof Types.Name) {
          var $18 = v.value0.lexeme === "$Default";
          if ($18) {
              var error = "Cannot use reserved token " + v.value0.lexeme;
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))({
                  errors: [ error ]
              });
          };
          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(emptyResults);
      };
      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(emptyResults);
  };
  var checkErrorTokenUsage = function (v) {
      if (v instanceof Types.Name) {
          return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(function (ctx) {
              var $21 = errorTokenDefined(v.value0)(ctx.tokenTypes);
              if ($21) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(emptyResults);
              };
              var error = v.value0.lexeme + " was not defined as a token";
              return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))({
                  errors: [ error ]
              });
          });
      };
      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(emptyResults);
  };
  var checkRules = function (results) {
      return function (ast) {
          var join = function (r1) {
              return function (r2) {
                  return {
                      errors: Data_Semigroup.append(Data_Semigroup.semigroupArray)(r1.errors)(r2.errors)
                  };
              };
          };
          var joinResults = function (arr) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(join)({
                  errors: [  ]
              })(arr);
          };
          if (ast instanceof Types.Program) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_Functor.functorArray)(checkRules(results))(ast.value0)))(function (res) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(joinResults(res));
              });
          };
          if (ast instanceof Types.NormalSpecs) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_Functor.functorArray)(checkRules(results))(ast.value0)))(function (res) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(joinResults(res));
              });
          };
          if (ast instanceof Types.ErrorSpecs) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_Functor.functorArray)(checkRules(results))(ast.value0)))(function (res) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(joinResults(res));
              });
          };
          if (ast instanceof Types.DefaultSpecs) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_Functor.functorArray)(checkRules(results))(ast.value0)))(function (res) {
                  return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(joinResults(res));
              });
          };
          if (ast instanceof Types.NormalSpec) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_Functor.functorArray)(checkUniqueToken)(ast.value0)))(function (unique) {
                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_Functor.functorArray)(checkReserved)(ast.value0)))(function (reserved) {
                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(joinResults(Data_Semigroup.append(Data_Semigroup.semigroupArray)(unique)(reserved)));
                  });
              });
          };
          if (ast instanceof Types.ErrorSpec) {
              return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_Functor.functorArray)(checkErrorTokenUsage)(ast.value0)))(function (usage) {
                  return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))((function () {
                      var v = Data_Array.head(ast.value0);
                      if (v instanceof Data_Maybe.Nothing) {
                          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(emptyResults);
                      };
                      if (v instanceof Data_Maybe.Just) {
                          return checkUniqueErrors(v.value0);
                      };
                      throw new Error("Failed pattern match at TypeChecker (line 76, column 19 - line 78, column 48): " + [ v.constructor.name ]);
                  })())(function (unique) {
                      return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(joinResults(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ unique ])(usage)));
                  });
              });
          };
          return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(results);
      };
  };
  var doTypeCheck = function (ast) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(FirstPass.firstPass(ast))(function () {
          return checkRules(emptyResults)(ast);
      });
  };
  var typecheck = function (ast) {
      return Control_Monad_State.evalState(doTypeCheck(ast))(initialContext);
  };
  exports["typecheck"] = typecheck;
  exports["noErrors"] = noErrors;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.6
  "use strict";
  $PS["Compiler"] = $PS["Compiler"] || {};
  var exports = $PS["Compiler"];
  var CodeGen = $PS["CodeGen"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unit = $PS["Data.Unit"];
  var Lexer = $PS["Lexer"];
  var Parser = $PS["Parser"];
  var ParserTypes = $PS["ParserTypes"];
  var TypeChecker = $PS["TypeChecker"];
  var Types = $PS["Types"];                
  var findErrors = function (arr) {
      var errorMessage = function (tok) {
          if (tok.type instanceof Lexer.FAIL) {
              return "Error near " + (tok.lexeme + (" at " + (Data_Show.show(Data_Show.showInt)(tok.line) + (":" + Data_Show.show(Data_Show.showInt)(tok.column)))));
          };
          return "";
      };
      var failures = Data_Array.filter(function (tok) {
          return Data_Eq.eq(Lexer.eqTokenType)(tok.type)(Lexer.FAIL.value);
      })(arr);
      var errors = Data_Functor.map(Data_Functor.functorArray)(errorMessage)(failures);
      var $4 = Data_Array["null"](errors);
      if ($4) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Unit.unit);
      };
      return new Data_Either.Left(errors);
  };
  var convertForParser = function (tok) {
      var convertType = function (t) {
          if (t instanceof Lexer.NormalHeader) {
              return ParserTypes.NormalHeader.value;
          };
          if (t instanceof Lexer.ErrorHeader) {
              return ParserTypes.ErrorHeader.value;
          };
          if (t instanceof Lexer.DefaultHeader) {
              return ParserTypes.DefaultHeader.value;
          };
          if (t instanceof Lexer.Regex) {
              return ParserTypes.Regex.value;
          };
          if (t instanceof Lexer.ErrorMessage) {
              return ParserTypes.ErrorMessage.value;
          };
          if (t instanceof Lexer.Name) {
              return ParserTypes.Name.value;
          };
          if (t instanceof Lexer.Default) {
              return ParserTypes.Default.value;
          };
          if (t instanceof Lexer.Terminator) {
              return ParserTypes.Terminator.value;
          };
          if (t instanceof Lexer.WhiteSpace) {
              return ParserTypes.FAIL.value;
          };
          if (t instanceof Lexer.FAIL) {
              return ParserTypes.FAIL.value;
          };
          throw new Error("Failed pattern match at Compiler (line 116, column 25 - line 126, column 37): " + [ t.constructor.name ]);
      };
      return {
          lexeme: tok.lexeme,
          line: tok.line,
          column: tok.column,
          type: convertType(tok.type)
      };
  };
  var convertForCodeGen = function (ast) {
      var rights = Data_Array.filter(Data_Either.isRight);
      var lefts = Data_Array.filter(Data_Either.isLeft);
      var convertType = function (t) {
          if (t instanceof ParserTypes.Name) {
              return new Data_Either.Right(Types.N.value);
          };
          if (t instanceof ParserTypes.Regex) {
              return new Data_Either.Right(Types.R.value);
          };
          if (t instanceof ParserTypes.ErrorMessage) {
              return new Data_Either.Right(Types.EM.value);
          };
          return Data_Either.Left.create([ "Encountered invalid token type during code generation: " + Data_Show.show(ParserTypes.showTokenType)(t) ]);
      };
      var convertToken = function (tok) {
          var v = convertType(tok.type);
          if (v instanceof Data_Either.Right) {
              return new Data_Either.Right({
                  lexeme: tok.lexeme,
                  column: tok.column,
                  line: tok.line,
                  type: v.value0
              });
          };
          if (v instanceof Data_Either.Left) {
              return new Data_Either.Left(v.value0);
          };
          throw new Error("Failed pattern match at Compiler (line 171, column 28 - line 178, column 29): " + [ v.constructor.name ]);
      };
      var acc = function (maybe) {
          return function (arr) {
              if (maybe instanceof Data_Maybe.Nothing) {
                  return arr;
              };
              if (maybe instanceof Data_Maybe.Just) {
                  var v = convertForCodeGen(maybe.value0);
                  if (v instanceof Data_Either.Left) {
                      return Data_Array.cons(new Data_Either.Left(v.value0))(arr);
                  };
                  if (v instanceof Data_Either.Right) {
                      return Data_Array.cons(new Data_Either.Right(v.value0))(arr);
                  };
                  throw new Error("Failed pattern match at Compiler (line 167, column 26 - line 169, column 58): " + [ v.constructor.name ]);
              };
              throw new Error("Failed pattern match at Compiler (line 165, column 25 - line 169, column 58): " + [ maybe.constructor.name ]);
          };
      };
      var convertArrayForCodeGen = function (asts) {
          return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Foldable.foldr(Data_Foldable.foldableArray)(acc)([  ])(asts));
      };
      if (ast instanceof ParserTypes.NProgram) {
          return Control_Bind.bind(Data_Either.bindEither)(convertArrayForCodeGen([ ast.value0, ast.value1, ast.value2 ]))(function (arr) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Types.Program(arr));
          });
      };
      if (ast instanceof ParserTypes.NNormalSpecs) {
          return Control_Bind.bind(Data_Either.bindEither)(convertArrayForCodeGen(Data_Functor.map(Data_Functor.functorArray)(Data_Maybe.Just.create)(ast.value0)))(function (arr) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Types.NormalSpecs(arr));
          });
      };
      if (ast instanceof ParserTypes.NErrorSpecs) {
          return Control_Bind.bind(Data_Either.bindEither)(convertArrayForCodeGen(Data_Functor.map(Data_Functor.functorArray)(Data_Maybe.Just.create)(ast.value0)))(function (arr) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Types.ErrorSpecs(arr));
          });
      };
      if (ast instanceof ParserTypes.NDefaultSpecs) {
          return Control_Bind.bind(Data_Either.bindEither)(convertArrayForCodeGen(Data_Functor.map(Data_Functor.functorArray)(Data_Maybe.Just.create)(ast.value0)))(function (arr) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Types.DefaultSpecs(arr));
          });
      };
      if (ast instanceof ParserTypes.NNormalSpec) {
          return Control_Bind.bind(Data_Either.bindEither)(convertArrayForCodeGen([ new Data_Maybe.Just(ast.value0), new Data_Maybe.Just(ast.value1) ]))(function (arr) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Types.NormalSpec(arr));
          });
      };
      if (ast instanceof ParserTypes.NErrorSpec) {
          return Control_Bind.bind(Data_Either.bindEither)(convertArrayForCodeGen([ new Data_Maybe.Just(ast.value0), new Data_Maybe.Just(ast.value1), ast.value2 ]))(function (arr) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Types.ErrorSpec(arr));
          });
      };
      if (ast instanceof ParserTypes.NDefaultError) {
          return Control_Bind.bind(Data_Either.bindEither)(convertArrayForCodeGen([ new Data_Maybe.Just(ast.value0), ast.value1 ]))(function (arr) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Types.DefaultError(arr));
          });
      };
      if (ast instanceof ParserTypes.NRegex) {
          return Control_Bind.bind(Data_Either.bindEither)(convertToken(ast.value0))(function (t) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Types.Regex(t));
          });
      };
      if (ast instanceof ParserTypes.NName) {
          return Control_Bind.bind(Data_Either.bindEither)(convertToken(ast.value0))(function (t) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Types.Name(t));
          });
      };
      if (ast instanceof ParserTypes.NErrorMessage) {
          return Control_Bind.bind(Data_Either.bindEither)(convertToken(ast.value0))(function (t) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Types.ErrorMessage(t));
          });
      };
      throw new Error("Failed pattern match at Compiler (line 129, column 25 - line 159, column 38): " + [ ast.constructor.name ]);
  };
  var compile = function (prog) {
      var doTypeCheck = function (ast) {
          var results = TypeChecker.typecheck(ast);
          var $32 = TypeChecker.noErrors(results);
          if ($32) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(ast);
          };
          return Data_Either.Left.create(results.errors);
      };
      var doParse = function (tokens) {
          var results = Parser.parse(tokens);
          if (results.success) {
              if (results.tree instanceof Data_Maybe.Nothing) {
                  return Data_Either.Left.create(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ "Error during parsing. No AST could be generated" ])(Data_Functor.map(Data_Functor.functorArray)(Parser.toString)(results.errors)));
              };
              if (results.tree instanceof Data_Maybe.Just) {
                  return convertForCodeGen(results.tree.value0);
              };
              throw new Error("Failed pattern match at Compiler (line 80, column 17 - line 82, column 56): " + [ results.tree.constructor.name ]);
          };
          return Data_Either.Left.create(Data_Functor.map(Data_Functor.functorArray)(Parser.toString)(results.errors));
      };
      var doLex = function (p) {
          var tokens = Lexer.lex(p);
          return Control_Bind.discard(Control_Bind.discardUnit)(Data_Either.bindEither)(findErrors(tokens))(function () {
              var parserTokens_ = Data_Array_NonEmpty.fromArray(Data_Array.snoc(Data_Functor.map(Data_Functor.functorArray)(convertForParser)(tokens))(Parser.eof));
              if (parserTokens_ instanceof Data_Maybe.Nothing) {
                  return new Data_Either.Left([ "Program is empty. Could not compile" ]);
              };
              if (parserTokens_ instanceof Data_Maybe.Just) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(parserTokens_.value0);
              };
              throw new Error("Failed pattern match at Compiler (line 71, column 13 - line 74, column 38): " + [ parserTokens_.constructor.name ]);
          });
      };
      var doGenerate = function (ast) {
          return Data_Either.Right.create(CodeGen.generate(ast));
      };
      return Control_Bind.bind(Data_Either.bindEither)(doLex(prog))(function (parserTokens) {
          return Control_Bind.bind(Data_Either.bindEither)(doParse(parserTokens))(function (tree) {
              return Control_Bind.bind(Data_Either.bindEither)(doTypeCheck(tree))(function (checkedTree) {
                  return Control_Bind.bind(Data_Either.bindEither)(doGenerate(checkedTree))(function (lexer) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)(lexer);
                  });
              });
          });
      });
  };
  var exec = function (prog) {
      var v = compile(prog);
      if (v instanceof Data_Either.Left) {
          return {
              errors: v.value0,
              lexer: ""
          };
      };
      if (v instanceof Data_Either.Right) {
          return {
              errors: [  ],
              lexer: v.value0
          };
      };
      throw new Error("Failed pattern match at Compiler (line 43, column 5 - line 51, column 14): " + [ v.constructor.name ]);
  };
  exports["compile"] = compile;
  exports["exec"] = exec;
})(PS);
module.exports = PS["Compiler"];
